[{"C:\\Users\\maywn\\Front-end\\src\\index.js":"1","C:\\Users\\maywn\\Front-end\\src\\App.js":"2","C:\\Users\\maywn\\Front-end\\src\\reportWebVitals.js":"3","C:\\Users\\maywn\\Front-end\\src\\components\\Header.js":"4","C:\\Users\\maywn\\Front-end\\src\\common\\Words.js":"5","C:\\Users\\maywn\\Front-end\\src\\components\\Home.js":"6","C:\\Users\\maywn\\Front-end\\src\\common\\PrivateRoute.js":"7","C:\\Users\\maywn\\Front-end\\src\\components\\Login.js":"8","C:\\Users\\maywn\\Front-end\\src\\contexts\\UserContext.js":"9","C:\\Users\\maywn\\Front-end\\src\\hooks\\useInputs.js":"10","C:\\Users\\maywn\\Front-end\\src\\common\\CheckValue.js":"11","C:\\Users\\maywn\\Front-end\\src\\hooks\\useInputsCorrect.js":"12","C:\\Users\\maywn\\Front-end\\src\\components\\Signup.js":"13","C:\\Users\\maywn\\Front-end\\src\\components\\HeaderButton.js":"14","C:\\Users\\maywn\\Front-end\\src\\components\\PostList.js":"15","C:\\Users\\maywn\\Front-end\\src\\components\\CategoryList.js":"16","C:\\Users\\maywn\\Front-end\\src\\components\\Category.js":"17","C:\\Users\\maywn\\Front-end\\src\\components\\Post.js":"18","C:\\Users\\maywn\\Front-end\\src\\contexts\\CheckedItemContext.js":"19","C:\\Users\\maywn\\Front-end\\src\\contexts\\ComponentVisibilityContext.js":"20","C:\\Users\\maywn\\Front-end\\src\\contexts\\CheckStatusContext.js":"21","C:\\Users\\maywn\\Front-end\\src\\components\\AddPost.js":"22","C:\\Users\\maywn\\Front-end\\src\\InputSample.js":"23","C:\\Users\\maywn\\Front-end\\src\\components\\ViewPost.js":"24","C:\\Users\\maywn\\Front-end\\src\\components\\Contents.js":"25","C:\\Users\\maywn\\Front-end\\src\\components\\ChangeFileModal.js":"26","C:\\Users\\maywn\\Front-end\\src\\components\\UpdatePost.js":"27","C:\\Users\\maywn\\Front-end\\src\\common\\getInformation.js":"28","C:\\Users\\maywn\\Front-end\\src\\hooks\\useAsync.js":"29","C:\\Users\\maywn\\Front-end\\src\\hooks\\usePagination.js":"30","C:\\Users\\maywn\\Front-end\\src\\contexts\\CategoryContext.js":"31","C:\\Users\\maywn\\Front-end\\src\\api\\ContentsAPI.js":"32","C:\\Users\\maywn\\Front-end\\src\\components\\LoadingModal.js":"33","C:\\Users\\maywn\\Front-end\\src\\contexts\\ContentsListContext.js":"34"},{"size":557,"mtime":1611765572189,"results":"35","hashOfConfig":"36"},{"size":1864,"mtime":1614241809159,"results":"37","hashOfConfig":"36"},{"size":375,"mtime":1609835589632,"results":"38","hashOfConfig":"36"},{"size":1468,"mtime":1613806659345,"results":"39","hashOfConfig":"36"},{"size":3067,"mtime":1614238839660,"results":"40","hashOfConfig":"36"},{"size":214,"mtime":1613745301959,"results":"41","hashOfConfig":"36"},{"size":396,"mtime":1613806609798,"results":"42","hashOfConfig":"36"},{"size":4202,"mtime":1613828283902,"results":"43","hashOfConfig":"36"},{"size":1312,"mtime":1613827929661,"results":"44","hashOfConfig":"36"},{"size":1962,"mtime":1614244889601,"results":"45","hashOfConfig":"36"},{"size":338,"mtime":1613719216440,"results":"46","hashOfConfig":"36"},{"size":1334,"mtime":1613632220196,"results":"47","hashOfConfig":"36"},{"size":3665,"mtime":1613723945537,"results":"48","hashOfConfig":"36"},{"size":1360,"mtime":1613828196271,"results":"49","hashOfConfig":"36"},{"size":8957,"mtime":1614234028667,"results":"50","hashOfConfig":"36"},{"size":1212,"mtime":1613887759894,"results":"51","hashOfConfig":"36"},{"size":1246,"mtime":1614234329328,"results":"52","hashOfConfig":"36"},{"size":1853,"mtime":1614228212155,"results":"53","hashOfConfig":"36"},{"size":1458,"mtime":1611308449376,"results":"54","hashOfConfig":"36"},{"size":1447,"mtime":1611220392450,"results":"55","hashOfConfig":"36"},{"size":1435,"mtime":1611393562714,"results":"56","hashOfConfig":"36"},{"size":5950,"mtime":1614157553116,"results":"57","hashOfConfig":"36"},{"size":941,"mtime":1611765406067,"results":"58","hashOfConfig":"36"},{"size":7625,"mtime":1614241784574,"results":"59","hashOfConfig":"36"},{"size":1939,"mtime":1614180222242,"results":"60","hashOfConfig":"36"},{"size":2836,"mtime":1614243474326,"results":"61","hashOfConfig":"36"},{"size":7102,"mtime":1614245242635,"results":"62","hashOfConfig":"36"},{"size":167,"mtime":1614234323220,"results":"63","hashOfConfig":"36"},{"size":1259,"mtime":1614176026258,"results":"64","hashOfConfig":"36"},{"size":1230,"mtime":1613813296028,"results":"65","hashOfConfig":"36"},{"size":1363,"mtime":1613806517821,"results":"66","hashOfConfig":"36"},{"size":2072,"mtime":1614228456251,"results":"67","hashOfConfig":"36"},{"size":146,"mtime":1613891398463,"results":"68","hashOfConfig":"36"},{"size":1241,"mtime":1614226220928,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1mdek37",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\maywn\\Front-end\\src\\index.js",[],["147","148"],"C:\\Users\\maywn\\Front-end\\src\\App.js",[],"C:\\Users\\maywn\\Front-end\\src\\reportWebVitals.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\Header.js",[],"C:\\Users\\maywn\\Front-end\\src\\common\\Words.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\Home.js",["149"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/Home.scss';\r\n\r\nfunction Home() {\r\n\treturn (\r\n\t\t<div className=\"home\">\r\n\t\t\t<b>메인페이지</b>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\maywn\\Front-end\\src\\common\\PrivateRoute.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\Login.js",["150"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Words from '../common/Words';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport { useComponentVisibilityDispatch } from '../contexts/ComponentVisibilityContext';\r\nimport useInputs from '../hooks/useInputs';\r\nimport useAsync from '../hooks/useAsync';\r\nimport useInputsCorrect from '../hooks/useInputsCorrect';\r\nimport { isEmpty } from '../common/CheckValue';\r\nimport GoogleLogo from '../icon/GoogleLogo.png';\r\nimport NaverLogo from '../icon/NaverLogo.png';\r\nimport KakaoLogo from '../icon/KakaoLogo.png';\r\nimport '../styles/Auth.scss';\r\nimport '../styles/Text.scss';\r\nimport { useUserDispatch } from '../contexts/UserContext';\r\n\r\nfunction LogIn({ history }) {\r\n\tconst visibilityDispatch = useComponentVisibilityDispatch();\r\n\tconst userdispatch = useUserDispatch();\r\n\tconst [form, onChange] = useInputs({ id: '', password: '' });\r\n\tconst { id, password } = form;\r\n\tconst [inputState, checkInput] = useInputsCorrect({ idCorrect: 1, passwordCorrect: 1 });\r\n\tconst { idCorrect, passwordCorrect } = inputState;\r\n\tconst [loginErrorState, setLoginError] = useState({ loginSuccess: true });\r\n\tconst { loginSuccess } = loginErrorState;\r\n\r\n\tuseEffect(() => {\r\n\t\tvisibilityDispatch({ type: 'INVISIBLE', name: 'headerVisibility' });\r\n\t\treturn () => {\r\n\t\t\tvisibilityDispatch({ type: 'VISIBLE', name: 'headerVisibility' });\r\n\t\t};\r\n\t}, [visibilityDispatch]);\r\n\r\n\tconst handleLogin = () => {\r\n\t\taxios\r\n\t\t\t.post('http://52.78.77.73:8080/user/login', {\r\n\t\t\t\tsignId: id,\r\n\t\t\t\tpwd: password,\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.data === false) {\r\n\t\t\t\t\tsetLoginError({ ...loginErrorState, loginSuccess: response.data });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst { id, name } = response.data;\r\n\t\t\t\t\tlocalStorage.setItem('userToken', id);\r\n\t\t\t\t\tlocalStorage.setItem('userName', name);\r\n\t\t\t\t\tuserdispatch({ type: 'LOGIN', userToken: id, userName: name });\r\n\t\t\t\t\thistory.push('/postlist/0');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(`${error}${Words.REPORT_ERROR}`);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst confirmInputs = () => {\r\n\t\tcheckInput('idCorrect', id);\r\n\t\tcheckInput('passwordCorrect', password);\r\n\t\tif (!isEmpty(id) && !isEmpty(password)) {\r\n\t\t\thandleLogin();\r\n\t\t}\r\n\t};\r\n\r\n\tconst getErrorText = () => {\r\n\t\tif (passwordCorrect === 0) {\r\n\t\t\treturn <div className={classNames('text', 'auth', 'error-message')}>{Words.ENTER_PASSWORD}</div>;\r\n\t\t} else if (!loginSuccess) {\r\n\t\t\treturn <div className={classNames('text', 'auth', 'error-message')}>{Words.REPORT_ID_PASSWORD_ERROR}</div>;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"auth\">\r\n\t\t\t<div className=\"auth-form\">\r\n\t\t\t\t<input className=\"input\" name=\"id\" placeholder={Words.ENTER_ID} value={id} maxLength=\"20\" onChange={onChange} />\r\n\t\t\t\t{idCorrect === 0 && <div className={classNames('text', 'auth', 'error-message')}>{Words.ENTER_ID}</div>}\r\n\t\t\t\t<input className=\"input\" type=\"password\" name=\"password\" placeholder={Words.ENTER_PASSWORD} value={password} onChange={onChange} />\r\n\t\t\t\t{getErrorText()}\r\n\t\t\t\t<button className={classNames('button', 'auth', 'basic')} onClick={confirmInputs}>\r\n\t\t\t\t\t<span className={classNames('text', 'white', 'auth')}>{Words.LOGIN}</span>\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button className={classNames('button', 'auth', 'social')}>\r\n\t\t\t\t\t<img className=\"social-image\" src={GoogleLogo} alt=\"GoogleLogo\" />\r\n\t\t\t\t\t<span className={classNames('text', 'auth', 'social')}>{Words.GOOGLE}</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={classNames('button', 'auth', 'social')}>\r\n\t\t\t\t\t<img className=\"social-image\" src={NaverLogo} alt=\"NaverLogo\" />\r\n\t\t\t\t\t<span className={classNames('text', 'auth', 'social')}>{Words.NAVER}</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={classNames('button', 'auth', 'social')}>\r\n\t\t\t\t\t<img className=\"social-image\" src={KakaoLogo} alt=\"KakaoLogo\" />\r\n\t\t\t\t\t<span className={classNames('text', 'auth', 'social')}>{Words.KAKAO}</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<span className={classNames('text', 'auth', 'go-signup')}>\r\n\t\t\t\t\t{Words.ASK_MEMBER}\r\n\t\t\t\t\t<Link to=\"/signup\" style={{ color: 'purple' }}>\r\n\t\t\t\t\t\t{Words.SIGNUP}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t{Words.GO}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default LogIn;\r\n","C:\\Users\\maywn\\Front-end\\src\\contexts\\UserContext.js",[],"C:\\Users\\maywn\\Front-end\\src\\hooks\\useInputs.js",[],"C:\\Users\\maywn\\Front-end\\src\\common\\CheckValue.js",[],"C:\\Users\\maywn\\Front-end\\src\\hooks\\useInputsCorrect.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\Signup.js",["151"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport classNames from 'classnames';\r\nimport { useComponentVisibilityDispatch } from '../contexts/ComponentVisibilityContext';\r\nimport useInputs from '../hooks/useInputs';\r\nimport useInputsCorrect from '../hooks/useInputsCorrect';\r\nimport Words from '../common/Words';\r\nimport '../styles/Auth.scss';\r\n\r\nconst idInformation = [Words.ENTER_ID, Words.ID_CONDITION, Words.ID_CONDITION];\r\nconst passwordInformation = [Words.ENTER_PASSWORD, Words.PASSWORD_CONDITION, Words.PASSWORD_CONDITION];\r\nconst emailInformation = [Words.ENTER_EMAIL, Words.EMAIL_CONDITION, Words.EMAIL_CONDITION];\r\n\r\nfunction Signup({ history }) {\r\n\tconst dispatch = useComponentVisibilityDispatch();\r\n\tconst [state, checkInput] = useInputsCorrect({ idCorrect: 1, passwordCorrect: 1, emailCorrect: 1 });\r\n\tconst { idCorrect, passwordCorrect, emailCorrect } = state;\r\n\tconst [form, onChange] = useInputs({ id: '', password: '', email: '', nickname: '' });\r\n\tconst { id, password, email, nickname } = form;\r\n\tconst availableSignup = idCorrect !== 3 || passwordCorrect !== 3 || emailCorrect !== 3;\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch({ type: 'INVISIBLE', name: 'headerVisibility' });\r\n\t\treturn () => {\r\n\t\t\tdispatch({ type: 'VISIBLE', name: 'headerVisibility' });\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\tconst handleSignup = () => {\r\n\t\tconst signupDt = new Date().toISOString();\r\n\t\taxios\r\n\t\t\t.post('http://52.78.77.73:8080/user/signup', {\r\n\t\t\t\temail: email,\r\n\t\t\t\tname: nickname,\r\n\t\t\t\tpwd: password,\r\n\t\t\t\tsignId: id,\r\n\t\t\t\tsignupDt: signupDt,\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.data === -1) {\r\n\t\t\t\t\talert(Words.DUPLICATE_ID);\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(Words.SUCCESS_SIGNUP);\r\n\t\t\t\t\thistory.push('/login');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(`${error}${Words.REPORT_ERROR}`);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"auth\">\r\n\t\t\t<div className=\"auth-form\">\r\n\t\t\t\t<input className=\"input\" name=\"id\" placeholder={Words.ENTER_ID} value={id} maxLength=\"20\" onChange={onChange} onBlur={() => checkInput('idCorrect', id)} />\r\n\t\t\t\t{idCorrect < 3 && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className={classNames('text', 'auth', 'error-message')} style={{ color: idCorrect === 1 ? 'green' : 'red' }}>\r\n\t\t\t\t\t\t\t{idInformation[idCorrect]}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"input\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\tplaceholder={Words.ENTER_PASSWORD}\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonBlur={(e) => checkInput('passwordCorrect', e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t{passwordCorrect < 3 && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className={classNames('text', 'auth', 'error-message')} style={{ color: passwordCorrect === 1 ? 'green' : 'red' }}>\r\n\t\t\t\t\t\t\t{passwordInformation[passwordCorrect]}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t<input className=\"input\" name=\"email\" value={email} placeholder={Words.ENTER_EMAIL} onChange={onChange} onBlur={(e) => checkInput('emailCorrect', e.target.value)} />\r\n\t\t\t\t{emailCorrect < 3 && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className={classNames('text', 'auth', 'error-message')} style={{ color: emailCorrect === 1 ? 'green' : 'red' }}>\r\n\t\t\t\t\t\t\t{emailInformation[emailCorrect]}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t<input className=\"input\" name=\"nickname\" value={nickname} placeholder={Words.ENTER_NICKNAME} onChange={onChange} />\r\n\r\n\t\t\t\t<button className={classNames('button', 'auth', 'basic')} disabled={availableSignup || !nickname} onClick={handleSignup}>\r\n\t\t\t\t\t<span className={classNames('text', 'auth')} style={{ color: availableSignup ? '#d9e3ff' : 'white' }}>\r\n\t\t\t\t\t\t{Words.SIGNUP}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Signup;\r\n","C:\\Users\\maywn\\Front-end\\src\\components\\HeaderButton.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\PostList.js",["152","153","154","155","156","157"],"import React, { useEffect, useMemo } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Post from './Post';\r\nimport { useComponentVisibilityDispatch } from '../contexts/ComponentVisibilityContext';\r\nimport { useCheckStatusState, useCheckStatusDispatch } from '../contexts/CheckStatusContext';\r\nimport { useCheckedItemsState, useCheckedItemsDispatch } from '../contexts/CheckedItemContext';\r\nimport { useCategoryState } from '../contexts/CategoryContext';\r\nimport { useUserState } from '../contexts/UserContext';\r\nimport { useContentsListDispatch } from '../contexts/ContentsListContext';\r\nimport useInputs from '../hooks/useInputs';\r\nimport usePagination from '../hooks/usePagination';\r\nimport useAsync from '../hooks/useAsync';\r\nimport { getContentsList, deleteContents } from '../api/ContentsAPI';\r\nimport Words from '../common/Words';\r\nimport { getPageArray } from '../common/getInformation';\r\nimport SearchIcon from '../icon/SearchIcon.png';\r\nimport LeftArrow from '../icon/LeftArrow.png';\r\nimport RightArrow from '../icon/RightArrow.png';\r\nimport LoadingImage from '../icon/LoadingImage.gif';\r\nimport '../styles/ViewPost.scss';\r\nimport '../styles/Button.scss';\r\nimport '../styles/Text.scss';\r\n// postlist-header 컴포넌트화 시킬까 생각중..\r\n\r\nfunction PostList() {\r\n\tconst pageCount = 10;\r\n\tconst { currentCategoryId } = useCategoryState();\r\n\tconst { checkedItems } = useCheckedItemsState();\r\n\tconst checkedItemsDispatch = useCheckedItemsDispatch();\r\n\tconst componentVisibilityDispatch = useComponentVisibilityDispatch();\r\n\tconst { checkBoxVisibility, isAllChecked } = useCheckStatusState();\r\n\tconst checkStatusDispatch = useCheckStatusDispatch();\r\n\tconst { userToken } = useUserState();\r\n\tconst contentsListDispatch = useContentsListDispatch();\r\n\tconst [form, onChange] = useInputs({ search: '' });\r\n\tconst { search } = form;\r\n\tconst [pagination, updateCurrentPage, updateStartEndPage] = usePagination();\r\n\tconst { currentPage, start, end } = pagination;\r\n\tconst [getPostState, getPostRefetch, getPostChangeFetchEnd] = useAsync(() => getContentsList(currentCategoryId, userToken), [currentCategoryId]);\r\n\tconst { loading: getPostLoading, data: postList, error: getPostError, fetchEnd: getPostFetchEnd } = getPostState;\r\n\tconst [deletePostState, deleteRefetch, deletePostChangeFetchEnd] = useAsync(() => deleteContents(checkedItems, userToken), [], true);\r\n\tconst { loading: deletePostLoading, data: isDeletePost, error: deletePostError, fetchEnd: deletePostFetchEnd } = deletePostState;\r\n\tconst postCount = useMemo(() => postList.length, [postList]);\r\n\tconst pageMaxIndex = useMemo(() => Math.ceil(postCount / pageCount), [postCount, pageCount]);\r\n\tconst pageArray = useMemo(() => getPageArray(pageMaxIndex).slice(start, end), [pageMaxIndex, start, end]);\r\n\tconst postStartIndex = useMemo(() => (currentPage - 1) * pageCount, [currentPage, pageCount]);\r\n\tconst postEndIndex = useMemo(() => currentPage * pageCount, [currentPage, pageCount]);\r\n\r\n\tuseEffect(() => {\r\n\t\tcomponentVisibilityDispatch({ type: 'VISIBLE', name: 'categoryVisibility' });\r\n\t\treturn () => {\r\n\t\t\tcomponentVisibilityDispatch({ type: 'INVISIBLE', name: 'categoryVisibility' });\r\n\t\t};\r\n\t}, [componentVisibilityDispatch]);\r\n\r\n\tif (currentCategoryId !== 0 && getPostFetchEnd) {\r\n\t\tcontentsListDispatch({ type: 'SET_CONTENTS_LIST', value: postList });\r\n\t\tgetPostChangeFetchEnd();\r\n\t}\r\n\r\n\tif (deletePostFetchEnd) {\r\n\t\tgetPostRefetch();\r\n\t\tdeletePostChangeFetchEnd();\r\n\t}\r\n\r\n\tconst resetCheckedItems = () => {\r\n\t\tcheckStatusDispatch({ type: 'SET_FALSE', name: 'isAllChecked' });\r\n\t\tcheckedItemsDispatch({ type: 'RESET_ITEM' });\r\n\t};\r\n\r\n\tconst checkBoxHandler = () => {\r\n\t\tif (checkBoxVisibility) {\r\n\t\t\tcheckStatusDispatch({ type: 'SET_FALSE', name: 'checkBoxVisibility' });\r\n\t\t\tresetCheckedItems();\r\n\t\t} else {\r\n\t\t\tcheckStatusDispatch({ type: 'SET_TRUE', name: 'checkBoxVisibility' });\r\n\t\t}\r\n\t};\r\n\r\n\tconst allCheckedHandler = ({ target }) => {\r\n\t\tif (target.checked) {\r\n\t\t\tcheckStatusDispatch({ type: 'SET_TRUE', name: 'isAllChecked' });\r\n\t\t\tpostList.map((post) => {\r\n\t\t\t\tif (!checkedItems.includes(post.id)) {\r\n\t\t\t\t\tcheckedItemsDispatch({ type: 'ADD_ITEM', item: post.id });\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tresetCheckedItems();\r\n\t\t}\r\n\t};\r\n\r\n\tconst confirmDelete = () => {\r\n\t\tconst isConfirm = window.confirm(Words.ASK_DELETE_POSTS);\r\n\t\tif (isConfirm) {\r\n\t\t\tdeleteRefetch();\r\n\t\t\tresetCheckedItems();\r\n\t\t\tgetPostRefetch();\r\n\t\t}\r\n\t};\r\n\r\n\tconst confirmItemsNull = () => {\r\n\t\tconst itemLength = checkedItems.length;\r\n\t\tif (itemLength === 0) {\r\n\t\t\talert(Words.SELECT_POST);\r\n\t\t} else {\r\n\t\t\tconfirmDelete();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"view-area\">\r\n\t\t\t<div className=\"view-header\">\r\n\t\t\t\t<div className={classNames('view-header', 'search-area')}>\r\n\t\t\t\t\t<div className=\"search-form\">\r\n\t\t\t\t\t\t<img className=\"search-icon\" src={SearchIcon} alt=\"SearchIcon\" />\r\n\t\t\t\t\t\t<input className=\"search-input\" name=\"search\" placeholder={Words.SEARCH} value={search} onChange={onChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* <button className={classNames('button', 'view', 'blue', 'small')}>\r\n\t\t\t\t\t\t<span className={classNames('text', 'white', 'post-list', 'small')}>{Words.SEARCH}</span>\r\n\t\t\t\t\t</button> */}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classNames('view-header', 'button-area', 'small')}>\r\n\t\t\t\t\t{checkBoxVisibility ? (\r\n\t\t\t\t\t\t<button className={classNames('button', 'view', 'white', 'list')} onClick={confirmItemsNull}>\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'blue', 'post-list', 'small')}>{Words.DELETE}</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Link to=\"/AddPost\" className={classNames('button', 'view', 'white', 'list')} id=\"add\">\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'blue', 'post-list', 'small')} id=\"add\">\r\n\t\t\t\t\t\t\t\t{Words.ADD}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<button className={classNames('button', 'view', 'blue', 'list')} onClick={checkBoxHandler} id={!checkBoxVisibility ? 'delete' : ''}>\r\n\t\t\t\t\t\t<span className={classNames('text', 'white', 'post-list', 'small')}>{checkBoxVisibility ? Words.CANCEL : Words.DELETE}</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={classNames('post-view', 'list')}>\r\n\t\t\t\t<div className=\"all-check\">\r\n\t\t\t\t\t{postList.length !== 0 && checkBoxVisibility && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<label className=\"check-label\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName=\"check-input\"\r\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\tchecked={isAllChecked}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\tallCheckedHandler(e);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span className=\"check-box\"></span>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'post-list', 'check')}>{Words.ALL_CHECK}</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classNames('view-form', 'big')}>\r\n\t\t\t\t\t{getPostLoading && <img className=\"loading-image\" src={LoadingImage} alt=\"LoadingImage\" />}\r\n\t\t\t\t\t{!getPostLoading && postCount === 0 && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'no-post')}>{Words.NO_POST}</span>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'no-post')}>{Words.WRITE_POST}</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{search === ''\r\n\t\t\t\t\t\t? postList.slice(postStartIndex, postEndIndex).map((post) => <Post post={post} isDetail={false} key={post.id} />)\r\n\t\t\t\t\t\t: postList\r\n\t\t\t\t\t\t\t\t.filter((post) => post.title.includes(search))\r\n\t\t\t\t\t\t\t\t.slice(postStartIndex, postEndIndex)\r\n\t\t\t\t\t\t\t\t.map((post) => <Post id={post.id} title={post.title} date={post.date.slice(0, 10)} isDetail={false} key={post.id} />)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{postCount !== 0 && (\r\n\t\t\t\t<div className=\"footer\">\r\n\t\t\t\t\t<div className=\"page-number\">\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName=\"left-arrow\"\r\n\t\t\t\t\t\t\tsrc={LeftArrow}\r\n\t\t\t\t\t\t\talt=\"LeftArrow\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tif (currentPage !== 1) {\r\n\t\t\t\t\t\t\t\t\tupdateCurrentPage(currentPage - 1);\r\n\t\t\t\t\t\t\t\t\t// pageCount 변수명 변경, 한페이지에 놓은 post수 / 페이지 갯수 변수 두개 설정\r\n\t\t\t\t\t\t\t\t\tif (currentPage % pageCount === 1) {\r\n\t\t\t\t\t\t\t\t\t\tupdateStartEndPage(false);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{pageArray.map((page) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName={classNames('button', 'view', 'white', 'page-link')}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tupdateCurrentPage(page);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: currentPage === page && 'pink' }}\r\n\t\t\t\t\t\t\t\t\tkey={page}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{page}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName=\"right-arrow\"\r\n\t\t\t\t\t\t\tsrc={RightArrow}\r\n\t\t\t\t\t\t\talt=\"RightArrow\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tif (currentPage !== pageMaxIndex) {\r\n\t\t\t\t\t\t\t\t\tupdateCurrentPage(currentPage + 1);\r\n\t\t\t\t\t\t\t\t\t// pageCount 변수명 변경, 한페이지에 놓은 post수 / 페이지 갯수 변수 두개 설정\r\n\t\t\t\t\t\t\t\t\tif (currentPage % pageCount === 0) {\r\n\t\t\t\t\t\t\t\t\t\tupdateStartEndPage(true);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PostList;\r\n","C:\\Users\\maywn\\Front-end\\src\\components\\CategoryList.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\Category.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\Post.js",[],"C:\\Users\\maywn\\Front-end\\src\\contexts\\CheckedItemContext.js",[],"C:\\Users\\maywn\\Front-end\\src\\contexts\\ComponentVisibilityContext.js",[],"C:\\Users\\maywn\\Front-end\\src\\contexts\\CheckStatusContext.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\AddPost.js",["158","159","160","161"],"import React, { useState, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport Words from '../common/Words';\r\nimport { isEmpty } from '../common/CheckValue';\r\nimport { useCategoryState } from '../contexts/CategoryContext';\r\nimport { useUserState } from '../contexts/UserContext';\r\nimport useInputs from '../hooks/useInputs';\r\nimport useAsync from '../hooks/useAsync';\r\nimport { postContents } from '../api/ContentsAPI';\r\nimport LoadingModal from './LoadingModal';\r\nimport '../styles/WritePost.scss';\r\nimport '../styles/Button.scss';\r\nimport '../styles/Text.scss';\r\n\r\nfunction AddPost({ history }) {\r\n\tconst { userToken } = useUserState();\r\n\tconst { categoryList } = useCategoryState();\r\n\tconst [category, setCategory] = useState(0);\r\n\tconst [uploadFile, setUploadFile] = useState({\r\n\t\tfileName: Words.SELECT_FILE,\r\n\t\tfileInformation: null,\r\n\t});\r\n\tconst { fileName, fileInformation } = uploadFile;\r\n\tconst [inputForm, onChange] = useInputs({ title: '', description: '' });\r\n\tconst { title, description } = inputForm;\r\n\tconst contents = { category: category, desc: description, file: fileInformation, subject_nums: 2, title: title };\r\n\tconst [contentsState, refetch] = useAsync(\r\n\t\t() => {\r\n\t\t\tpostContents(contents, userToken);\r\n\t\t},\r\n\t\t[],\r\n\t\ttrue\r\n\t);\r\n\tconst { loading, data: isSuccess, error } = contentsState;\r\n\tconst [isLoadingModalOn, setIsLoadingModalOn] = useState(false);\r\n\r\n\tconst goBack = () => {\r\n\t\thistory.goBack();\r\n\t};\r\n\r\n\tif (!isLoadingModalOn && !isSuccess) {\r\n\t\tgoBack();\r\n\t}\r\n\r\n\tconst categoryHandler = (value) => {\r\n\t\tsetCategory(value);\r\n\t};\r\n\r\n\tconst fileHandler = (selectFile) => {\r\n\t\tconst _fileName = selectFile.name;\r\n\t\tsetUploadFile({\r\n\t\t\tfileName: _fileName,\r\n\t\t\tfileInformation: selectFile,\r\n\t\t});\r\n\t};\r\n\r\n\tconst getMessage = () => {\r\n\t\tlet message = '';\r\n\t\tif (isEmpty(title)) {\r\n\t\t\tmessage = Words.ENTER_TITLE;\r\n\t\t} else if (category === 0) {\r\n\t\t\tmessage = Words.SELECT_CATEGORY;\r\n\t\t} else if (fileName === Words.SELECT_FILE) {\r\n\t\t\tmessage = Words.SELECT_FILE;\r\n\t\t} else if (isEmpty(description)) {\r\n\t\t\tmessage = Words.ENTER_DESCRIPTION;\r\n\t\t}\r\n\t\treturn message;\r\n\t};\r\n\r\n\tconst postData = (e) => {\r\n\t\tconst message = getMessage();\r\n\t\tif (!isEmpty(message)) {\r\n\t\t\talert(message);\r\n\t\t} else {\r\n\t\t\trefetch();\r\n\t\t}\r\n\t};\r\n\r\n\tconst confirmCancel = (e) => {\r\n\t\tconst isConfirm = window.confirm(Words.ASK_ADD_CANCEL);\r\n\t\tif (isConfirm) {\r\n\t\t\tgoBack();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"write\">\r\n\t\t\t<div className={classNames('write', 'input-form', 'add')}>\r\n\t\t\t\t<div className={classNames('write', 'input-area', 'small')}>\r\n\t\t\t\t\t<span className={classNames('text', 'bold', 'title')}>{Words.TITLE}</span>\r\n\t\t\t\t\t<input type=\"text\" className={classNames('write', 'input', 'small')} name=\"title\" placeholder={Words.ENTER_TITLE + Words.MAX_TITLE_LENGTH} value={title} onChange={onChange} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classNames('write', 'input-area', 'small')}>\r\n\t\t\t\t\t<span className={classNames('text', 'bold', 'title')}>{Words.CATEGORY}</span>\r\n\t\t\t\t\t<div className={classNames('write', 'input', 'small', 'category')}>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tvalue={category}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tcategoryHandler(e.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{categoryList.map((category) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<option value={category.id} key={category.id}>\r\n\t\t\t\t\t\t\t\t\t\t{category.id === 0 ? Words.SELECT_CATEGORY : category.title}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<div className={classNames('write', 'select-arrow')} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classNames('write', 'input-area', 'small')}>\r\n\t\t\t\t\t<span className={classNames('text', 'bold', 'title')}>{Words.FILE}</span>\r\n\t\t\t\t\t<div className={classNames('write', 'input', 'small')}>\r\n\t\t\t\t\t\t<div className={classNames('write', 'file-name')}>\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'gray', 'file-name')}>{fileName}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\tid=\"select-file\"\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tconst selectFile = e.target.files[0];\r\n\t\t\t\t\t\t\t\tselectFile && fileHandler(selectFile);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label className={classNames('button', 'blue', 'write-post', 'small')} htmlFor=\"select-file\">\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'white', 'select-small')}>{Words.SELECT}</span>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classNames('write', 'input-area', 'middle')}>\r\n\t\t\t\t\t<span className={classNames('text', 'bold', 'title')}>{Words.DESCRIPTION}</span>\r\n\t\t\t\t\t<div className={classNames('write', 'input', 'big')}>\r\n\t\t\t\t\t\t<textarea type=\"text\" name=\"description\" placeholder={Words.ENTER_DESCRIPTION} value={description} onChange={onChange} />\r\n\t\t\t\t\t\t<div className={classNames('write', 'description')}>\r\n\t\t\t\t\t\t\t<div className={classNames('write', 'description', 'count')}>\r\n\t\t\t\t\t\t\t\t<span className={classNames('text', 'gray', 'description')}>\r\n\t\t\t\t\t\t\t\t\t({description.length}자/{Words.MAX_DESCRIPTION_LENGTH})\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classNames('write', 'input-area', 'small')}>\r\n\t\t\t\t\t<div className={classNames('write', 'button-area')}>\r\n\t\t\t\t\t\t{/* <Link to=\"/postList\" className={classNames('write', 'write-link')} onClick={postData}> */}\r\n\t\t\t\t\t\t<button type=\"submit\" className={classNames('button', 'white', 'write-post', 'big')} onClick={postData}>\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'blue', 'write-post')}>{Words.SAVE}</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t{/* </Link> */}\r\n\t\t\t\t\t\t{/* <Link to=\"/postList\" className={classNames('write', 'write-link')} onClick={confirmCancel}> */}\r\n\t\t\t\t\t\t<button className={classNames('button', 'blue', 'write-post', 'big')} onClick={confirmCancel}>\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'white', 'write-post')}>{Words.CANCEL}</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t{/* </Link> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{isLoadingModalOn && <LoadingModal />}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default AddPost;\r\n","C:\\Users\\maywn\\Front-end\\src\\InputSample.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\ViewPost.js",["162","163","164","165","166","167","168","169","170"],"import React, { useEffect, useState, useMemo } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport { useComponentVisibilityDispatch } from '../contexts/ComponentVisibilityContext';\r\nimport { useCheckStatusDispatch } from '../contexts/CheckStatusContext';\r\nimport { useCheckedItemsDispatch } from '../contexts/CheckedItemContext';\r\nimport { useUserState } from '../contexts/UserContext';\r\nimport { useCategoryState } from '../contexts/CategoryContext';\r\nimport { useContentsListState } from '../contexts/ContentsListContext';\r\nimport Words from '../common/Words';\r\nimport usePagination from '../hooks/usePagination';\r\nimport useAsync from '../hooks/useAsync';\r\nimport { getContents, getContentsList, deleteContents } from '../api/ContentsAPI';\r\nimport { getPageArray } from '../common/getInformation';\r\nimport ChangeFileModal from './ChangeFileModal';\r\nimport Contents from './Contents';\r\nimport Post from './Post';\r\nimport LeftArrow from '../icon/LeftArrow.png';\r\nimport RightArrow from '../icon/RightArrow.png';\r\nimport LoadingImage from '../icon/LoadingImage.gif';\r\nimport '../styles/ViewPost.scss';\r\nimport '../styles/Text.scss';\r\n\r\nfunction scrollToUp(event) {\r\n\t// 수정 스크롤 위로 올라가지 않음, 고쳐야됨\r\n\tdocument.getElementById('root').scrollTo(0, 0);\r\n}\r\n\r\nfunction ViewPost({ match }) {\r\n\tconst { userToken } = useUserState();\r\n\tconst { postId, categoryId } = match.params;\r\n\tconst postIdNum = parseInt(postId);\r\n\tconst categoryIdNum = parseInt(categoryId);\r\n\tconst { currentCategoryId } = useCategoryState();\r\n\tconst isAllCategory = currentCategoryId === 0;\r\n\tconst pageCount = 4;\r\n\tconst { contentsList } = useContentsListState();\r\n\tconst componentVisibilityDispatch = useComponentVisibilityDispatch();\r\n\tconst checkStatusDispatch = useCheckStatusDispatch();\r\n\tconst checkedItemsDispatch = useCheckedItemsDispatch();\r\n\tconst [isChangeFileModalOn, setIsChangeFileModalOn] = useState(false);\r\n\tconst [getContentsState, getContentsRefetch, getContentsChangeFetchEnd] = useAsync(() => getContents(postIdNum, userToken), [postIdNum], false);\r\n\tconst { loading: getContentsLoading, data: contents, error: getContentsError, fetchEnd: getContentsFetchEnd } = getContentsState;\r\n\tconst [getContentsListState, getContentsListRefetch, getContentsListchangeFetchEnd] = useAsync(() => getContentsList(categoryIdNum, userToken), [], isAllCategory ? false : true);\r\n\tconst { loading: getContentsListLoading, data, error: getContentsListError, fetchEnd: getContentsListFetchEnd } = getContentsListState;\r\n\tconst postList = isAllCategory ? data : contentsList;\r\n\tconst [deleteContentsState, deleteContentsRefetch] = useAsync(\r\n\t\t() => {\r\n\t\t\tdeleteContents([postIdNum], userToken);\r\n\t\t},\r\n\t\t[],\r\n\t\ttrue\r\n\t);\r\n\tconst initialPage = useMemo(() => Math.floor(postList.findIndex((post) => post.id === postIdNum) / pageCount) + 1, [postList, postIdNum, pageCount]);\r\n\tconst [pagination, updateCurrentPage, updateStartEndPage] = usePagination(initialPage);\r\n\tconst { currentPage, start, end } = pagination;\r\n\tconst postCount = useMemo(() => postList.length, [postList]);\r\n\tconst pageMaxIndex = useMemo(() => Math.ceil(postCount / pageCount), [postCount, pageCount]);\r\n\tconst pageArray = useMemo(() => getPageArray(pageMaxIndex).slice(start, end), [pageMaxIndex, start, end]);\r\n\tconst postIndexStart = useMemo(() => (currentPage - 1) * pageCount, [currentPage, pageCount]);\r\n\tconst postIndexEnd = useMemo(() => currentPage * pageCount, [currentPage, pageCount]);\r\n\r\n\tuseEffect(() => {\r\n\t\tcheckStatusDispatch({ type: 'RESET' });\r\n\t\tcheckedItemsDispatch({ type: 'RESET_ITEM' });\r\n\t\tcomponentVisibilityDispatch({ type: 'VISIBLE', name: 'categoryVisibility' });\r\n\t\treturn () => {\r\n\t\t\tcomponentVisibilityDispatch({ type: 'INVISIBLE', name: 'categoryVisibility' });\r\n\t\t};\r\n\t}, [componentVisibilityDispatch]);\r\n\r\n\tif (getContentsListFetchEnd) {\r\n\t\tupdateCurrentPage(initialPage);\r\n\t\tgetContentsListchangeFetchEnd();\r\n\t}\r\n\r\n\tconst handleChangeFileModal = () => {\r\n\t\tsetIsChangeFileModalOn(!isChangeFileModalOn);\r\n\t};\r\n\r\n\tconst deletePost = (e) => {\r\n\t\tconst isConfirm = window.confirm(Words.ASK_DELETE_POST);\r\n\t\tif (isConfirm) {\r\n\t\t\tconsole.log('삭제');\r\n\t\t\t// deleteContentsRefetch();\r\n\t\t} else {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"view-area\">\r\n\t\t\t<div className=\"view-header\">\r\n\t\t\t\t<div className={classNames('view-header', 'button-area', 'big')}>\r\n\t\t\t\t\t<button className={classNames('button', 'view', 'white', 'detail')}>\r\n\t\t\t\t\t\t<span className={classNames('text', 'blue', 'post-list', 'small')} onClick={handleChangeFileModal}>\r\n\t\t\t\t\t\t\t{Words.CHANGE_FILE}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<Link to={`/updatePost/${postId}`} className={classNames('button', 'view', 'white', 'detail')} id=\"update\">\r\n\t\t\t\t\t\t<span className={classNames('text', 'blue', 'post-list', 'small')}>{Words.UPDATE}</span>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to={`/postList/${currentCategoryId}`} className={classNames('button', 'view', 'blue', 'detail')} onClick={deletePost}>\r\n\t\t\t\t\t\t<span className={classNames('text', 'white', 'post-list', 'small')} id=\"delete\">\r\n\t\t\t\t\t\t\t{Words.DELETE}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{getContentsLoading || getContentsListLoading ? (\r\n\t\t\t\t<img className=\"loading-image\" src={LoadingImage} alt=\"LoadingImage\" />\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className={classNames('post-view', 'detail')}>\r\n\t\t\t\t\t\t<div className={classNames('view-form', 'middle')}>{contents.length !== 0 && <Contents contents={contents} />}</div>\r\n\t\t\t\t\t\t<div className=\"detail-list \">\r\n\t\t\t\t\t\t\t<div className=\"detail-category\">\r\n\t\t\t\t\t\t\t\t<span className={classNames('text', 'bold', 'post-detail', 'category-name')}>{contents.length !== 0 && contents.category.title}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classNames('view-form', 'small')}>\r\n\t\t\t\t\t\t\t\t{postList.slice(postIndexStart, postIndexEnd).map((post) => (\r\n\t\t\t\t\t\t\t\t\t<Post post={post} isDetail={true} currentPostId={postIdNum} key={post.ct_id} />\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"footer\">\r\n\t\t\t\t\t\t<div className=\"page-number\">\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"left-arrow\"\r\n\t\t\t\t\t\t\t\tsrc={LeftArrow}\r\n\t\t\t\t\t\t\t\talt=\"LeftArrow\"\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tif (currentPage !== 1) {\r\n\t\t\t\t\t\t\t\t\t\tupdateCurrentPage(currentPage - 1);\r\n\t\t\t\t\t\t\t\t\t\t// pageCount 변수명 변경, 한페이지에 놓은 post수 / 페이지 갯수 변수 두개 설정\r\n\t\t\t\t\t\t\t\t\t\tif (currentPage % 10 === 1) {\r\n\t\t\t\t\t\t\t\t\t\t\tupdateStartEndPage(false);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{pageArray.map((page) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName={classNames('button', 'view', 'white', 'page-link')}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tupdateCurrentPage(page);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: currentPage === page && 'pink' }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{page}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"right-arrow\"\r\n\t\t\t\t\t\t\t\tsrc={RightArrow}\r\n\t\t\t\t\t\t\t\talt=\"RightArrow\"\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tif (currentPage !== pageMaxIndex) {\r\n\t\t\t\t\t\t\t\t\t\tupdateCurrentPage(currentPage + 1);\r\n\t\t\t\t\t\t\t\t\t\t// pageCount 변수명 변경, 한페이지에 놓은 post수 / 페이지 갯수 변수 두개 설정\r\n\t\t\t\t\t\t\t\t\t\tif (currentPage % 10 === 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tupdateStartEndPage(true);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t{isChangeFileModalOn && <ChangeFileModal contentsId={postIdNum} getContentsRefetch={getContentsRefetch} handleChangeFileModal={handleChangeFileModal}></ChangeFileModal>}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ViewPost;\r\n","C:\\Users\\maywn\\Front-end\\src\\components\\Contents.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\ChangeFileModal.js",["171"],"C:\\Users\\maywn\\Front-end\\src\\components\\UpdatePost.js",["172","173","174"],"C:\\Users\\maywn\\Front-end\\src\\common\\getInformation.js",[],"C:\\Users\\maywn\\Front-end\\src\\hooks\\useAsync.js",["175","176"],"import { useReducer, useEffect } from 'react';\r\n\r\nfunction reducer(state, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'LOADING':\r\n\t\t\treturn {\r\n\t\t\t\tloading: true,\r\n\t\t\t\tdata: [],\r\n\t\t\t\terror: null,\r\n\t\t\t\tfetchEnd: false,\r\n\t\t\t};\r\n\t\tcase 'SUCCESS':\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tdata: action.data,\r\n\t\t\t\terror: null,\r\n\t\t\t\tfetchEnd: true,\r\n\t\t\t};\r\n\t\tcase 'ERROR':\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tdata: [],\r\n\t\t\t\terror: action.error,\r\n\t\t\t\tfetchEnd: true,\r\n\t\t\t};\r\n\t\tcase 'FETCH_END':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfetchEnd: false,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unhandled action type: ${action.type}`);\r\n\t}\r\n}\r\n\r\nfunction useAsync(callback, deps = [], skip = false) {\r\n\tconst [state, dispatch] = useReducer(reducer, {\r\n\t\tloading: false,\r\n\t\tdata: [],\r\n\t\terror: false,\r\n\t\tfetchEnd: false,\r\n\t});\r\n\r\n\tconst fetchData = async () => {\r\n\t\tdispatch({ type: 'LOADING' });\r\n\t\ttry {\r\n\t\t\tconst data = await callback();\r\n\t\t\tdispatch({ type: 'SUCCESS', data });\r\n\t\t} catch (e) {\r\n\t\t\tdispatch({ type: 'ERROR', error: e });\r\n\t\t}\r\n\t};\r\n\r\n\tconst changeFetchEnd = () => {\r\n\t\tdispatch({ type: 'FETCH_END' });\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (skip) return;\r\n\t\tfetchData();\r\n\t}, deps);\r\n\r\n\treturn [state, fetchData, changeFetchEnd];\r\n}\r\n\r\nexport default useAsync;\r\n","C:\\Users\\maywn\\Front-end\\src\\hooks\\usePagination.js",["177"],"import { useReducer, useCallback } from 'react';\r\n\r\nfunction paginationReducer(state, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'UPDATE_CURRENT_PAGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentPage: action.value,\r\n\t\t\t};\r\n\t\tcase 'UPDATE_START_END_PAGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstart: state.start + action.value,\r\n\t\t\t\tend: state.end + action.value,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unhandled action type: ${action.type}`);\r\n\t}\r\n}\r\n// viewPost에서 페이지 번호 보내주기\r\nfunction usePagination(initialPage = 1) {\r\n\tconst initialStart = Math.floor(initialPage / 10);\r\n\tconst initialState = {\r\n\t\tcurrentPage: initialPage,\r\n\t\tstart: initialStart * 10,\r\n\t\tend: (initialStart + 1) * 10,\r\n\t};\r\n\tconst [pagination, dispatch] = useReducer(paginationReducer, initialState);\r\n\r\n\tconst updateCurrentPage = (value) => {\r\n\t\tdispatch({ type: 'UPDATE_CURRENT_PAGE', value });\r\n\t};\r\n\t// 수정 - pageCount 매개변수에 넣어야 되나..?\r\n\tconst updateStartEndPage = (isUpIndex) => {\r\n\t\tisUpIndex ? dispatch({ type: 'UPDATE_START_END_PAGE', value: 10 }) : dispatch({ type: 'UPDATE_START_END_PAGE', value: -10 });\r\n\t};\r\n\r\n\treturn [pagination, updateCurrentPage, updateStartEndPage];\r\n}\r\n\r\nexport default usePagination;\r\n","C:\\Users\\maywn\\Front-end\\src\\contexts\\CategoryContext.js",[],"C:\\Users\\maywn\\Front-end\\src\\api\\ContentsAPI.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\LoadingModal.js",[],"C:\\Users\\maywn\\Front-end\\src\\contexts\\ContentsListContext.js",[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":13},{"ruleId":"182","severity":1,"message":"186","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":16},{"ruleId":"182","severity":1,"message":"187","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"183","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":13},{"ruleId":"182","severity":1,"message":"188","line":42,"column":58,"nodeType":"184","messageId":"185","endLine":42,"endColumn":70},{"ruleId":"182","severity":1,"message":"189","line":44,"column":19,"nodeType":"184","messageId":"185","endLine":44,"endColumn":36},{"ruleId":"182","severity":1,"message":"190","line":44,"column":44,"nodeType":"184","messageId":"185","endLine":44,"endColumn":56},{"ruleId":"182","severity":1,"message":"191","line":44,"column":65,"nodeType":"184","messageId":"185","endLine":44,"endColumn":80},{"ruleId":"192","severity":1,"message":"193","line":85,"column":24,"nodeType":"194","messageId":"195","endLine":85,"endColumn":26},{"ruleId":"182","severity":1,"message":"196","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"197","line":34,"column":10,"nodeType":"184","messageId":"185","endLine":34,"endColumn":17},{"ruleId":"182","severity":1,"message":"198","line":34,"column":36,"nodeType":"184","messageId":"185","endLine":34,"endColumn":41},{"ruleId":"182","severity":1,"message":"199","line":35,"column":27,"nodeType":"184","messageId":"185","endLine":35,"endColumn":46},{"ruleId":"182","severity":1,"message":"200","line":24,"column":10,"nodeType":"184","messageId":"185","endLine":24,"endColumn":20},{"ruleId":"182","severity":1,"message":"201","line":42,"column":47,"nodeType":"184","messageId":"185","endLine":42,"endColumn":72},{"ruleId":"182","severity":1,"message":"202","line":43,"column":62,"nodeType":"184","messageId":"185","endLine":43,"endColumn":78},{"ruleId":"182","severity":1,"message":"203","line":43,"column":90,"nodeType":"184","messageId":"185","endLine":43,"endColumn":109},{"ruleId":"182","severity":1,"message":"204","line":44,"column":31,"nodeType":"184","messageId":"185","endLine":44,"endColumn":53},{"ruleId":"182","severity":1,"message":"205","line":45,"column":56,"nodeType":"184","messageId":"185","endLine":45,"endColumn":76},{"ruleId":"182","severity":1,"message":"206","line":47,"column":9,"nodeType":"184","messageId":"185","endLine":47,"endColumn":28},{"ruleId":"182","severity":1,"message":"207","line":47,"column":30,"nodeType":"184","messageId":"185","endLine":47,"endColumn":51},{"ruleId":"208","severity":1,"message":"209","line":70,"column":5,"nodeType":"210","endLine":70,"endColumn":34,"suggestions":"211"},{"ruleId":"182","severity":1,"message":"198","line":26,"column":35,"nodeType":"184","messageId":"185","endLine":26,"endColumn":40},{"ruleId":"182","severity":1,"message":"212","line":19,"column":27,"nodeType":"184","messageId":"185","endLine":19,"endColumn":45},{"ruleId":"182","severity":1,"message":"198","line":20,"column":35,"nodeType":"184","messageId":"185","endLine":20,"endColumn":40},{"ruleId":"192","severity":1,"message":"213","line":88,"column":37,"nodeType":"194","messageId":"214","endLine":88,"endColumn":39},{"ruleId":"208","severity":1,"message":"215","line":61,"column":5,"nodeType":"184","endLine":61,"endColumn":9},{"ruleId":"208","severity":1,"message":"216","line":61,"column":5,"nodeType":"184","endLine":61,"endColumn":9,"suggestions":"217"},{"ruleId":"182","severity":1,"message":"218","line":1,"column":22,"nodeType":"184","messageId":"185","endLine":1,"endColumn":33},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useAsync' is defined but never used.","'useState' is defined but never used.","'getPostError' is assigned a value but never used.","'deletePostLoading' is assigned a value but never used.","'isDeletePost' is assigned a value but never used.","'deletePostError' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'setIsLoadingModalOn' is assigned a value but never used.","'scrollToUp' is defined but never used.","'getContentsChangeFetchEnd' is assigned a value but never used.","'getContentsError' is assigned a value but never used.","'getContentsFetchEnd' is assigned a value but never used.","'getContentsListRefetch' is assigned a value but never used.","'getContentsListError' is assigned a value but never used.","'deleteContentsState' is assigned a value but never used.","'deleteContentsRefetch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkStatusDispatch' and 'checkedItemsDispatch'. Either include them or remove the dependency array.","ArrayExpression",["221"],"'getContentsRefetch' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'fetchData' and 'skip'. Either include them or remove the dependency array.",["222"],"'useCallback' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},"Update the dependencies array to be: [checkStatusDispatch, checkedItemsDispatch, componentVisibilityDispatch]",{"range":"227","text":"228"},"Update the dependencies array to be: [fetchData, skip]",{"range":"229","text":"230"},[3791,3820],"[checkStatusDispatch, checkedItemsDispatch, componentVisibilityDispatch]",[1173,1177],"[fetchData, skip]"]