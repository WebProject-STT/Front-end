[{"C:\\Users\\maywn\\Front-end\\src\\index.js":"1","C:\\Users\\maywn\\Front-end\\src\\App.js":"2","C:\\Users\\maywn\\Front-end\\src\\reportWebVitals.js":"3","C:\\Users\\maywn\\Front-end\\src\\components\\Header.js":"4","C:\\Users\\maywn\\Front-end\\src\\common\\Words.js":"5","C:\\Users\\maywn\\Front-end\\src\\components\\Home.js":"6","C:\\Users\\maywn\\Front-end\\src\\common\\PrivateRoute.js":"7","C:\\Users\\maywn\\Front-end\\src\\components\\Login.js":"8","C:\\Users\\maywn\\Front-end\\src\\contexts\\UserContext.js":"9","C:\\Users\\maywn\\Front-end\\src\\hooks\\useInputs.js":"10","C:\\Users\\maywn\\Front-end\\src\\common\\CheckValue.js":"11","C:\\Users\\maywn\\Front-end\\src\\hooks\\useInputsCorrect.js":"12","C:\\Users\\maywn\\Front-end\\src\\components\\Signup.js":"13","C:\\Users\\maywn\\Front-end\\src\\components\\HeaderButton.js":"14","C:\\Users\\maywn\\Front-end\\src\\components\\PostList.js":"15","C:\\Users\\maywn\\Front-end\\src\\components\\CategoryList.js":"16","C:\\Users\\maywn\\Front-end\\src\\common\\tempData.js":"17","C:\\Users\\maywn\\Front-end\\src\\components\\Category.js":"18","C:\\Users\\maywn\\Front-end\\src\\components\\Post.js":"19","C:\\Users\\maywn\\Front-end\\src\\contexts\\CheckedItemContext.js":"20","C:\\Users\\maywn\\Front-end\\src\\contexts\\ComponentVisibilityContext.js":"21","C:\\Users\\maywn\\Front-end\\src\\contexts\\CheckStatusContext.js":"22","C:\\Users\\maywn\\Front-end\\src\\components\\AddPost.js":"23","C:\\Users\\maywn\\Front-end\\src\\common\\TempData.js":"24","C:\\Users\\maywn\\Front-end\\src\\InputSample.js":"25","C:\\Users\\maywn\\Front-end\\src\\components\\ViewPost.js":"26","C:\\Users\\maywn\\Front-end\\src\\components\\Contents.js":"27","C:\\Users\\maywn\\Front-end\\src\\components\\ChangeFileModal.js":"28","C:\\Users\\maywn\\Front-end\\src\\components\\UpdatePost.js":"29","C:\\Users\\maywn\\Front-end\\src\\common\\getInformation.js":"30","C:\\Users\\maywn\\Front-end\\src\\hooks\\useAsync.js":"31","C:\\Users\\maywn\\Front-end\\src\\hooks\\usePagination.js":"32","C:\\Users\\maywn\\Front-end\\src\\contexts\\CategoryContext.js":"33"},{"size":557,"mtime":1611765572189,"results":"34","hashOfConfig":"35"},{"size":1758,"mtime":1613745552996,"results":"36","hashOfConfig":"35"},{"size":375,"mtime":1609835589632,"results":"37","hashOfConfig":"35"},{"size":1468,"mtime":1613806659345,"results":"38","hashOfConfig":"35"},{"size":3041,"mtime":1613725582873,"results":"39","hashOfConfig":"35"},{"size":214,"mtime":1613745301959,"results":"40","hashOfConfig":"35"},{"size":396,"mtime":1613806609798,"results":"41","hashOfConfig":"35"},{"size":4133,"mtime":1613821974687,"results":"42","hashOfConfig":"35"},{"size":1346,"mtime":1613821948479,"results":"43","hashOfConfig":"35"},{"size":1561,"mtime":1613717459336,"results":"44","hashOfConfig":"35"},{"size":338,"mtime":1613719216440,"results":"45","hashOfConfig":"35"},{"size":1334,"mtime":1613632220196,"results":"46","hashOfConfig":"35"},{"size":3665,"mtime":1613723945537,"results":"47","hashOfConfig":"35"},{"size":1347,"mtime":1613725082750,"results":"48","hashOfConfig":"35"},{"size":8900,"mtime":1613814749644,"results":"49","hashOfConfig":"35"},{"size":1112,"mtime":1613827700042,"results":"50","hashOfConfig":"35"},{"size":1161,"mtime":1611736039556,"results":"51","hashOfConfig":"35"},{"size":1298,"mtime":1613804631570,"results":"52","hashOfConfig":"35"},{"size":1790,"mtime":1613036189469,"results":"53","hashOfConfig":"35"},{"size":1458,"mtime":1611308449376,"results":"54","hashOfConfig":"35"},{"size":1447,"mtime":1611220392450,"results":"55","hashOfConfig":"35"},{"size":1435,"mtime":1611393562714,"results":"56","hashOfConfig":"35"},{"size":5330,"mtime":1613236356889,"results":"57","hashOfConfig":"35"},{"size":21938,"mtime":1613813714128,"results":"58","hashOfConfig":"35"},{"size":941,"mtime":1611765406067,"results":"59","hashOfConfig":"35"},{"size":5845,"mtime":1613814909298,"results":"60","hashOfConfig":"35"},{"size":1996,"mtime":1613225803521,"results":"61","hashOfConfig":"35"},{"size":2141,"mtime":1613060878924,"results":"62","hashOfConfig":"35"},{"size":6722,"mtime":1613053167521,"results":"63","hashOfConfig":"35"},{"size":394,"mtime":1613807446566,"results":"64","hashOfConfig":"35"},{"size":1036,"mtime":1613809989879,"results":"65","hashOfConfig":"35"},{"size":1230,"mtime":1613813296028,"results":"66","hashOfConfig":"35"},{"size":1363,"mtime":1613806517821,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1mdek37",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\maywn\\Front-end\\src\\index.js",[],["145","146"],"C:\\Users\\maywn\\Front-end\\src\\App.js",[],"C:\\Users\\maywn\\Front-end\\src\\reportWebVitals.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\Header.js",[],"C:\\Users\\maywn\\Front-end\\src\\common\\Words.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\Home.js",["147"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/Home.scss';\r\n\r\nfunction Home() {\r\n\treturn (\r\n\t\t<div className=\"home\">\r\n\t\t\t<b>메인페이지</b>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\maywn\\Front-end\\src\\common\\PrivateRoute.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\Login.js",["148","149","150"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Words from '../common/Words';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport { useComponentVisibilityDispatch } from '../contexts/ComponentVisibilityContext';\r\nimport useInputs from '../hooks/useInputs';\r\nimport useAsync from '../hooks/useAsync';\r\nimport useInputsCorrect from '../hooks/useInputsCorrect';\r\nimport { isEmpty } from '../common/CheckValue';\r\nimport GoogleLogo from '../icon/GoogleLogo.png';\r\nimport NaverLogo from '../icon/NaverLogo.png';\r\nimport KakaoLogo from '../icon/KakaoLogo.png';\r\nimport '../styles/Auth.scss';\r\nimport '../styles/Text.scss';\r\nimport { useUserDispatch } from '../contexts/UserContext';\r\n\r\nfunction LogIn({ history }) {\r\n\tconst visibilityDispatch = useComponentVisibilityDispatch();\r\n\tconst userdispatch = useUserDispatch();\r\n\tconst [form, onChange] = useInputs({ id: '', password: '' });\r\n\tconst { id, password } = form;\r\n\tconst [inputState, checkInput] = useInputsCorrect({ idCorrect: 1, passwordCorrect: 1 });\r\n\tconst { idCorrect, passwordCorrect } = inputState;\r\n\tconst [loginState, setLoginError] = useState({ loginSuccess: true });\r\n\tconst { loginSuccess } = loginState;\r\n\r\n\tuseEffect(() => {\r\n\t\tvisibilityDispatch({ type: 'INVISIBLE', name: 'headerVisibility' });\r\n\t\treturn () => {\r\n\t\t\tvisibilityDispatch({ type: 'VISIBLE', name: 'headerVisibility' });\r\n\t\t};\r\n\t}, [visibilityDispatch]);\r\n\r\n\tconst handleLogin = () => {\r\n\t\taxios\r\n\t\t\t.post('http://52.78.77.73:8080/user/login', {\r\n\t\t\t\tsignId: id,\r\n\t\t\t\tpwd: password,\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response.data);\r\n\t\t\t\t// if (response.data === false) {\r\n\t\t\t\t// \tsetLoginError({ ...loginState, loginSuccess: response.data });\r\n\t\t\t\t// } else {\r\n\t\t\t\t// \tlocalStorage.setItem('userToken', response.data);\r\n\t\t\t\t// \tuserdispatch({ type: 'LOGIN' });\r\n\t\t\t\t// \thistory.push('/postlist/1');\r\n\t\t\t\t// }\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(`${error}${Words.REPORT_ERROR}`);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst confirmInputs = () => {\r\n\t\tcheckInput('idCorrect', id);\r\n\t\tcheckInput('passwordCorrect', password);\r\n\t\tif (!isEmpty(id) && !isEmpty(password)) {\r\n\t\t\thandleLogin();\r\n\t\t}\r\n\t};\r\n\r\n\tconst getErrorText = () => {\r\n\t\tif (passwordCorrect === 0) {\r\n\t\t\treturn <div className={classNames('text', 'auth', 'error-message')}>{Words.ENTER_PASSWORD}</div>;\r\n\t\t} else if (!loginSuccess) {\r\n\t\t\treturn <div className={classNames('text', 'auth', 'error-message')}>{Words.REPORT_ID_PASSWORD_ERROR}</div>;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"auth\">\r\n\t\t\t<div className=\"auth-form\">\r\n\t\t\t\t<input className=\"input\" name=\"id\" placeholder={Words.ENTER_ID} value={id} maxLength=\"20\" onChange={onChange} />\r\n\t\t\t\t{idCorrect === 0 && <div className={classNames('text', 'auth', 'error-message')}>{Words.ENTER_ID}</div>}\r\n\t\t\t\t<input className=\"input\" type=\"password\" name=\"password\" placeholder={Words.ENTER_PASSWORD} value={password} onChange={onChange} />\r\n\t\t\t\t{getErrorText()}\r\n\t\t\t\t<button className={classNames('button', 'auth', 'basic')} onClick={confirmInputs}>\r\n\t\t\t\t\t<span className={classNames('text', 'white', 'auth')}>{Words.LOGIN}</span>\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button className={classNames('button', 'auth', 'social')}>\r\n\t\t\t\t\t<img className=\"social-image\" src={GoogleLogo} alt=\"GoogleLogo\" />\r\n\t\t\t\t\t<span className={classNames('text', 'auth', 'social')}>{Words.GOOGLE}</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={classNames('button', 'auth', 'social')}>\r\n\t\t\t\t\t<img className=\"social-image\" src={NaverLogo} alt=\"NaverLogo\" />\r\n\t\t\t\t\t<span className={classNames('text', 'auth', 'social')}>{Words.NAVER}</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={classNames('button', 'auth', 'social')}>\r\n\t\t\t\t\t<img className=\"social-image\" src={KakaoLogo} alt=\"KakaoLogo\" />\r\n\t\t\t\t\t<span className={classNames('text', 'auth', 'social')}>{Words.KAKAO}</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<span className={classNames('text', 'auth', 'go-signup')}>\r\n\t\t\t\t\t{Words.ASK_MEMBER}\r\n\t\t\t\t\t<Link to=\"/signup\" style={{ color: 'purple' }}>\r\n\t\t\t\t\t\t{Words.SIGNUP}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t{Words.GO}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default LogIn;\r\n","C:\\Users\\maywn\\Front-end\\src\\contexts\\UserContext.js",[],"C:\\Users\\maywn\\Front-end\\src\\hooks\\useInputs.js",[],"C:\\Users\\maywn\\Front-end\\src\\common\\CheckValue.js",[],"C:\\Users\\maywn\\Front-end\\src\\hooks\\useInputsCorrect.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\Signup.js",["151"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport classNames from 'classnames';\r\nimport { useComponentVisibilityDispatch } from '../contexts/ComponentVisibilityContext';\r\nimport useInputs from '../hooks/useInputs';\r\nimport useInputsCorrect from '../hooks/useInputsCorrect';\r\nimport Words from '../common/Words';\r\nimport '../styles/Auth.scss';\r\n\r\nconst idInformation = [Words.ENTER_ID, Words.ID_CONDITION, Words.ID_CONDITION];\r\nconst passwordInformation = [Words.ENTER_PASSWORD, Words.PASSWORD_CONDITION, Words.PASSWORD_CONDITION];\r\nconst emailInformation = [Words.ENTER_EMAIL, Words.EMAIL_CONDITION, Words.EMAIL_CONDITION];\r\n\r\nfunction Signup({ history }) {\r\n\tconst dispatch = useComponentVisibilityDispatch();\r\n\tconst [state, checkInput] = useInputsCorrect({ idCorrect: 1, passwordCorrect: 1, emailCorrect: 1 });\r\n\tconst { idCorrect, passwordCorrect, emailCorrect } = state;\r\n\tconst [form, onChange] = useInputs({ id: '', password: '', email: '', nickname: '' });\r\n\tconst { id, password, email, nickname } = form;\r\n\tconst availableSignup = idCorrect !== 3 || passwordCorrect !== 3 || emailCorrect !== 3;\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch({ type: 'INVISIBLE', name: 'headerVisibility' });\r\n\t\treturn () => {\r\n\t\t\tdispatch({ type: 'VISIBLE', name: 'headerVisibility' });\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\tconst handleSignup = () => {\r\n\t\tconst signupDt = new Date().toISOString();\r\n\t\taxios\r\n\t\t\t.post('http://52.78.77.73:8080/user/signup', {\r\n\t\t\t\temail: email,\r\n\t\t\t\tname: nickname,\r\n\t\t\t\tpwd: password,\r\n\t\t\t\tsignId: id,\r\n\t\t\t\tsignupDt: signupDt,\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.data === -1) {\r\n\t\t\t\t\talert(Words.DUPLICATE_ID);\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(Words.SUCCESS_SIGNUP);\r\n\t\t\t\t\thistory.push('/login');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(`${error}${Words.REPORT_ERROR}`);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"auth\">\r\n\t\t\t<div className=\"auth-form\">\r\n\t\t\t\t<input className=\"input\" name=\"id\" placeholder={Words.ENTER_ID} value={id} maxLength=\"20\" onChange={onChange} onBlur={() => checkInput('idCorrect', id)} />\r\n\t\t\t\t{idCorrect < 3 && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className={classNames('text', 'auth', 'error-message')} style={{ color: idCorrect === 1 ? 'green' : 'red' }}>\r\n\t\t\t\t\t\t\t{idInformation[idCorrect]}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"input\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\tplaceholder={Words.ENTER_PASSWORD}\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonBlur={(e) => checkInput('passwordCorrect', e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t{passwordCorrect < 3 && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className={classNames('text', 'auth', 'error-message')} style={{ color: passwordCorrect === 1 ? 'green' : 'red' }}>\r\n\t\t\t\t\t\t\t{passwordInformation[passwordCorrect]}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t<input className=\"input\" name=\"email\" value={email} placeholder={Words.ENTER_EMAIL} onChange={onChange} onBlur={(e) => checkInput('emailCorrect', e.target.value)} />\r\n\t\t\t\t{emailCorrect < 3 && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className={classNames('text', 'auth', 'error-message')} style={{ color: emailCorrect === 1 ? 'green' : 'red' }}>\r\n\t\t\t\t\t\t\t{emailInformation[emailCorrect]}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t<input className=\"input\" name=\"nickname\" value={nickname} placeholder={Words.ENTER_NICKNAME} onChange={onChange} />\r\n\r\n\t\t\t\t<button className={classNames('button', 'auth', 'basic')} disabled={availableSignup || !nickname} onClick={handleSignup}>\r\n\t\t\t\t\t<span className={classNames('text', 'auth')} style={{ color: availableSignup ? '#d9e3ff' : 'white' }}>\r\n\t\t\t\t\t\t{Words.SIGNUP}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Signup;\r\n","C:\\Users\\maywn\\Front-end\\src\\components\\HeaderButton.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\PostList.js",["152","153","154","155"],"import React, { useEffect, useMemo } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Post from './Post';\r\nimport { useComponentVisibilityDispatch } from '../contexts/ComponentVisibilityContext';\r\nimport { useCheckStatusState, useCheckStatusDispatch } from '../contexts/CheckStatusContext';\r\nimport { useCheckedItemsState, useCheckedItemsDispatch } from '../contexts/CheckedItemContext';\r\nimport { useCategoryState } from '../contexts/CategoryContext';\r\nimport { useUserState } from '../contexts/UserContext';\r\nimport useInputs from '../hooks/useInputs';\r\nimport usePagination from '../hooks/usePagination';\r\nimport useAsync from '../hooks/useAsync';\r\nimport Words from '../common/Words';\r\nimport { getPostList, getPageArray } from '../common/getInformation';\r\nimport SearchIcon from '../icon/SearchIcon.png';\r\nimport LeftArrow from '../icon/LeftArrow.png';\r\nimport RightArrow from '../icon/RightArrow.png';\r\nimport '../styles/ViewPost.scss';\r\nimport '../styles/Button.scss';\r\nimport '../styles/Text.scss';\r\n// postlist-header 컴포넌트화 시킬까 생각중..\r\n\r\nasync function getContents(categoryId = 0, userToken) {\r\n\tconst response =\r\n\t\tcategoryId === 0\r\n\t\t\t? await axios.get('http://52.78.77.73:8080/contents', { headers: { 'X-AUTH-TOKEN': userToken } })\r\n\t\t\t: await axios.get(`http://52.78.77.73:8080/contents/${categoryId}`, { headers: { 'X-AUTH-TOKEN': userToken } });\r\n\treturn response.data;\r\n}\r\n\r\nfunction PostList() {\r\n\tconst pageCount = 10;\r\n\tconst { currentCategoryId } = useCategoryState();\r\n\tconst { checkedItems } = useCheckedItemsState();\r\n\tconst checkedItemsDispatch = useCheckedItemsDispatch();\r\n\tconst componentVisibilityDispatch = useComponentVisibilityDispatch();\r\n\tconst { checkBoxVisibility, isAllChecked } = useCheckStatusState();\r\n\tconst checkStatusDispatch = useCheckStatusDispatch();\r\n\tconst { userToken } = useUserState();\r\n\tconst [form, onChange] = useInputs({ search: '' });\r\n\tconst { search } = form;\r\n\tconst [pagination, updateCurrentPage, updateStartEndPage] = usePagination();\r\n\tconst { currentPage, start, end } = pagination;\r\n\t// const [postState, refetch] = useAsync(() => getContents(currentCategoryId, userToken), [currentCategoryId]);\r\n\t// const { loading, data: postList, error } = postState;\r\n\tconst postList = getPostList(currentCategoryId);\r\n\tconst postCount = useMemo(() => postList.length, [postList]);\r\n\tconst pageMaxIndex = Math.ceil(postCount / pageCount);\r\n\tconst pageArray = getPageArray(pageMaxIndex).slice(start, end);\r\n\tconst postStartIndex = (currentPage - 1) * pageCount;\r\n\tconst postEndIndex = currentPage * pageCount;\r\n\r\n\t// if (error) {\r\n\t// \talert(`${error}${Words.REPORT_API_ERROR}`);\r\n\t// }\r\n\r\n\tuseEffect(() => {\r\n\t\t// async function getContents(categoryId = 0, userToken) {\r\n\t\t// \tconst response =\r\n\t\t// \t\tcategoryId === 0\r\n\t\t// \t\t\t? await axios.get('http://52.78.77.73:8080/contents', { 'X-AUTH-TOKEN': userToken })\r\n\t\t// \t\t\t: await axios.get(`http://52.78.77.73:8080/contents/${categoryId}`, { 'X-AUTH-TOKEN': userToken });\r\n\t\t// \tconsole.log(response.data);\r\n\t\t// }\r\n\t\t// getContents(currentCategoryId, userToken);\r\n\t\tcomponentVisibilityDispatch({ type: 'VISIBLE', name: 'categoryVisibility' });\r\n\t\treturn () => {\r\n\t\t\tcomponentVisibilityDispatch({ type: 'INVISIBLE', name: 'categoryVisibility' });\r\n\t\t};\r\n\t}, [componentVisibilityDispatch]);\r\n\r\n\tconst resetCheckedItems = () => {\r\n\t\tcheckStatusDispatch({ type: 'SET_FALSE', name: 'isAllChecked' });\r\n\t\tcheckedItemsDispatch({ type: 'RESET_ITEM' });\r\n\t};\r\n\r\n\tconst checkBoxHandler = () => {\r\n\t\tif (checkBoxVisibility) {\r\n\t\t\tcheckStatusDispatch({ type: 'SET_FALSE', name: 'checkBoxVisibility' });\r\n\t\t\tresetCheckedItems();\r\n\t\t} else {\r\n\t\t\tcheckStatusDispatch({ type: 'SET_TRUE', name: 'checkBoxVisibility' });\r\n\t\t}\r\n\t};\r\n\r\n\tconst allCheckedHandler = ({ target }) => {\r\n\t\tif (target.checked) {\r\n\t\t\tcheckStatusDispatch({ type: 'SET_TRUE', name: 'isAllChecked' });\r\n\t\t\tpostList.map((post) => {\r\n\t\t\t\tif (!checkedItems.includes(post.ct_id)) {\r\n\t\t\t\t\tcheckedItemsDispatch({ type: 'ADD_ITEM', item: post.ct_id });\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tresetCheckedItems();\r\n\t\t}\r\n\t};\r\n\r\n\tconst confirmDelete = () => {\r\n\t\tconst isConfirm = window.confirm(Words.ASK_DELETE_POSTS);\r\n\t\tif (isConfirm) {\r\n\t\t\tresetCheckedItems();\r\n\t\t}\r\n\t};\r\n\r\n\tconst confirmItemsNull = () => {\r\n\t\tconst itemLength = checkedItems.length;\r\n\t\tif (itemLength === 0) {\r\n\t\t\talert(Words.SELECT_POST);\r\n\t\t} else {\r\n\t\t\tconfirmDelete();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"view-area\">\r\n\t\t\t<div className=\"view-header\">\r\n\t\t\t\t<div className={classNames('view-header', 'search-area')}>\r\n\t\t\t\t\t<div className=\"search-form\">\r\n\t\t\t\t\t\t<img className=\"search-icon\" src={SearchIcon} alt=\"SearchIcon\" />\r\n\t\t\t\t\t\t<input className=\"search-input\" name=\"search\" placeholder={Words.SEARCH} value={search} onChange={onChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* <button className={classNames('button', 'view', 'blue', 'small')}>\r\n\t\t\t\t\t\t<span className={classNames('text', 'white', 'post-list', 'small')}>{Words.SEARCH}</span>\r\n\t\t\t\t\t</button> */}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classNames('view-header', 'button-area', 'small')}>\r\n\t\t\t\t\t{checkBoxVisibility ? (\r\n\t\t\t\t\t\t<button className={classNames('button', 'view', 'white', 'list')} onClick={confirmItemsNull}>\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'blue', 'post-list', 'small')}>{Words.DELETE}</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Link to=\"/AddPost\" className={classNames('button', 'view', 'white', 'list')} id=\"add\">\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'blue', 'post-list', 'small')} id=\"add\">\r\n\t\t\t\t\t\t\t\t{Words.ADD}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<button className={classNames('button', 'view', 'blue', 'list')} onClick={checkBoxHandler} id={!checkBoxVisibility && 'delete'}>\r\n\t\t\t\t\t\t<span className={classNames('text', 'white', 'post-list', 'small')}>{checkBoxVisibility ? Words.CANCEL : Words.DELETE}</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={classNames('post-view', 'list')}>\r\n\t\t\t\t<div className=\"all-check\">\r\n\t\t\t\t\t{checkBoxVisibility && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<label className=\"check-label\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName=\"check-input\"\r\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\tchecked={isAllChecked}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\tallCheckedHandler(e);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span className=\"check-box\"></span>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'post-list', 'check')}>{Words.ALL_CHECK}</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classNames('view-form', 'big')}>\r\n\t\t\t\t\t{/* {loading && <>\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'no-post')}>{Words.LOADING_GET_POST}</span>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'no-post')}>{Words.WAIT}</span>\r\n\t\t\t\t\t\t</>} */}\r\n\t\t\t\t\t{postList.length === 0 && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'no-post')}>{Words.NO_POST}</span>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'no-post')}>{Words.WRITE_POST}</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{search === ''\r\n\t\t\t\t\t\t? postList.slice(postStartIndex, postEndIndex).map((post) => <Post id={post.ct_id} title={post.ct_title} date={post.ct_date} isDetail={false} key={post.ct_id} />)\r\n\t\t\t\t\t\t: postList\r\n\t\t\t\t\t\t\t\t.filter((post) => post.ct_title.includes(search))\r\n\t\t\t\t\t\t\t\t.slice(postStartIndex, postEndIndex)\r\n\t\t\t\t\t\t\t\t.map((post) => <Post id={post.ct_id} title={post.ct_title} date={post.ct_date} isDetail={false} key={post.ct_id} />)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{postList.length !== 0 && (\r\n\t\t\t\t<div className=\"footer\">\r\n\t\t\t\t\t<div className=\"page-number\">\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName=\"left-arrow\"\r\n\t\t\t\t\t\t\tsrc={LeftArrow}\r\n\t\t\t\t\t\t\talt=\"LeftArrow\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tif (currentPage !== 1) {\r\n\t\t\t\t\t\t\t\t\tupdateCurrentPage(currentPage - 1);\r\n\t\t\t\t\t\t\t\t\t// pageCount 변수명 변경, 한페이지에 놓은 post수 / 페이지 갯수 변수 두개 설정\r\n\t\t\t\t\t\t\t\t\tif (currentPage % pageCount === 1) {\r\n\t\t\t\t\t\t\t\t\t\tupdateStartEndPage(false);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{pageArray.map((page) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName={classNames('button', 'view', 'white', 'page-link')}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tupdateCurrentPage(page);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: currentPage === page && 'pink' }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{page}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName=\"right-arrow\"\r\n\t\t\t\t\t\t\tsrc={RightArrow}\r\n\t\t\t\t\t\t\talt=\"RightArrow\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tif (currentPage !== pageMaxIndex) {\r\n\t\t\t\t\t\t\t\t\tupdateCurrentPage(currentPage + 1);\r\n\t\t\t\t\t\t\t\t\t// pageCount 변수명 변경, 한페이지에 놓은 post수 / 페이지 갯수 변수 두개 설정\r\n\t\t\t\t\t\t\t\t\tif (currentPage % pageCount === 0) {\r\n\t\t\t\t\t\t\t\t\t\tupdateStartEndPage(true);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PostList;\r\n","C:\\Users\\maywn\\Front-end\\src\\components\\CategoryList.js",[],"C:\\Users\\maywn\\Front-end\\src\\common\\tempData.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\Category.js",["156"],"import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/Category.scss';\r\nimport '../styles/Text.scss';\r\nimport { useCategoryState, useCategoryDispatch } from '../contexts/CategoryContext';\r\nimport { useCheckStatusDispatch } from '../contexts/CheckStatusContext';\r\nimport { useCheckedItemsDispatch } from '../contexts/CheckedItemContext';\r\nimport { categoryList } from '../common/TempData';\r\n\r\nfunction Category({ categoryTitle, categoryId }) {\r\n\tconst { currentCategoryId } = useCategoryState();\r\n\tconst categoryDispatch = useCategoryDispatch();\r\n\tconst checkStatusDispatch = useCheckStatusDispatch();\r\n\tconst checkedItemsDispatch = useCheckedItemsDispatch();\r\n\tconst blueGray = '#ccd0de';\r\n\r\n\tconst selectCategory = () => {\r\n\t\tcategoryDispatch({ type: 'SET_CURRENT_CATEGORY', value: categoryId });\r\n\t\tcheckStatusDispatch({ type: 'RESET' });\r\n\t\tcheckedItemsDispatch({ type: 'RESET_ITEM' });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Link to={`/postList/${categoryId}`}>\r\n\t\t\t<div className=\"category\" onClick={selectCategory} style={{ background: currentCategoryId === categoryId ? blueGray : 'white' }}>\r\n\t\t\t\t<span className={classNames('text', 'bold', 'category')}>{categoryTitle}</span>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t);\r\n}\r\n\r\nexport default Category;\r\n","C:\\Users\\maywn\\Front-end\\src\\components\\Post.js",[],"C:\\Users\\maywn\\Front-end\\src\\contexts\\CheckedItemContext.js",[],"C:\\Users\\maywn\\Front-end\\src\\contexts\\ComponentVisibilityContext.js",[],"C:\\Users\\maywn\\Front-end\\src\\contexts\\CheckStatusContext.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\AddPost.js",["157","158","159"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport Words from '../common/Words';\r\nimport { isEmpty } from '../common/CheckValue';\r\nimport useInputs from '../hooks/useInputs';\r\nimport { categoryList } from '../common/TempData';\r\nimport '../styles/WritePost.scss';\r\nimport '../styles/Button.scss';\r\nimport '../styles/Text.scss';\r\n\r\nfunction AddPost({ history }) {\r\n\tconst [category, setCategory] = useState(categoryList[0].cg_title);\r\n\tconst [uploadFile, setUploadFile] = useState({\r\n\t\tfileName: Words.SELECT_FILE,\r\n\t\tfileInformation: null,\r\n\t});\r\n\tconst { fileName, fileInformation } = uploadFile;\r\n\tconst [form, onChange] = useInputs({ title: '', description: '' });\r\n\tconst { title, description } = form;\r\n\tlet tempNum = 0;\r\n\r\n\tconst temp = (e) => {\r\n\t\tconsole.log(e);\r\n\t\tconsole.log(tempNum);\r\n\t\ttempNum++;\r\n\t};\r\n\r\n\tconst categoryHandler = (value) => {\r\n\t\tsetCategory(value);\r\n\t};\r\n\r\n\tconst fileHandler = (selectFile) => {\r\n\t\tconst _fileName = selectFile.name;\r\n\t\tsetUploadFile({\r\n\t\t\tfileName: _fileName,\r\n\t\t\tfileInformation: selectFile,\r\n\t\t});\r\n\t};\r\n\r\n\tconst goBack = () => {\r\n\t\thistory.goBack();\r\n\t};\r\n\r\n\tconst getMessage = () => {\r\n\t\tlet message = '';\r\n\t\tif (isEmpty(title)) {\r\n\t\t\tmessage = Words.ENTER_TITLE;\r\n\t\t} else if (fileName === Words.SELECT_FILE) {\r\n\t\t\tmessage = Words.SELECT_FILE;\r\n\t\t}\r\n\t\treturn message;\r\n\t};\r\n\r\n\tconst postData = (e) => {\r\n\t\tconst message = getMessage();\r\n\t\tif (!isEmpty(message)) {\r\n\t\t\talert(message);\r\n\t\t} else {\r\n\t\t\tgoBack();\r\n\t\t}\r\n\t\t// api호출하는 코드 작성, 데이터 업로드 성공시 postList로 이동\r\n\t};\r\n\r\n\tconst confirmCancel = (e) => {\r\n\t\tconst isConfirm = window.confirm(Words.ASK_ADD_CANCEL);\r\n\t\tif (isConfirm) {\r\n\t\t\tgoBack();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"write\">\r\n\t\t\t<div className={classNames('write', 'input-form', 'add')}>\r\n\t\t\t\t<div className={classNames('write', 'input-area', 'small')}>\r\n\t\t\t\t\t<span className={classNames('text', 'bold', 'title')}>{Words.TITLE}</span>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName={classNames('write', 'input', 'small')}\r\n\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\tplaceholder={Words.ENTER_TITLE + Words.MAX_TITLE_LENGTH}\r\n\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\tonKeyUp={onChange}\r\n\t\t\t\t\t\t// onChange={onChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classNames('write', 'input-area', 'small')}>\r\n\t\t\t\t\t<span className={classNames('text', 'bold', 'title')}>{Words.CATEGORY}</span>\r\n\t\t\t\t\t<div className={classNames('write', 'input', 'small', 'category')}>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tvalue={category}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tcategoryHandler(e.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{categoryList.map((category) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<option value={category.cg_title} key={category.cg_id}>\r\n\t\t\t\t\t\t\t\t\t\t{category.cg_title}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<div className={classNames('write', 'select-arrow')} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classNames('write', 'input-area', 'small')}>\r\n\t\t\t\t\t<span className={classNames('text', 'bold', 'title')}>{Words.FILE}</span>\r\n\t\t\t\t\t<div className={classNames('write', 'input', 'small')}>\r\n\t\t\t\t\t\t<div className={classNames('write', 'file-name')}>\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'gray', 'file-name')}>{fileName}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\tid=\"select-file\"\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tconst selectFile = e.target.files[0];\r\n\t\t\t\t\t\t\t\tselectFile && fileHandler(selectFile);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\taccept=\".m4a\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label className={classNames('button', 'blue', 'write-post', 'small')} htmlFor=\"select-file\">\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'white', 'select-small')}>{Words.SELECT}</span>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classNames('write', 'input-area', 'middle')}>\r\n\t\t\t\t\t<span className={classNames('text', 'bold', 'title')}>{Words.DESCRIPTION}</span>\r\n\t\t\t\t\t<div className={classNames('write', 'input', 'big')}>\r\n\t\t\t\t\t\t<textarea type=\"text\" name=\"description\" placeholder={Words.ENTER_DESCRIPTION} value={description} onChange={onChange} />\r\n\t\t\t\t\t\t<div className={classNames('write', 'description')}>\r\n\t\t\t\t\t\t\t<div className={classNames('write', 'description', 'count')}>\r\n\t\t\t\t\t\t\t\t<span className={classNames('text', 'gray', 'description')}>\r\n\t\t\t\t\t\t\t\t\t({description.length}자/{Words.MAX_DESCRIPTION_LENGTH})\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classNames('write', 'input-area', 'small')}>\r\n\t\t\t\t\t<div className={classNames('write', 'button-area')}>\r\n\t\t\t\t\t\t{/* <Link to=\"/postList\" className={classNames('write', 'write-link')} onClick={postData}> */}\r\n\t\t\t\t\t\t<button className={classNames('button', 'white', 'write-post', 'big')} onClick={postData}>\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'blue', 'write-post')}>{Words.SAVE}</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t{/* </Link> */}\r\n\t\t\t\t\t\t{/* <Link to=\"/postList\" className={classNames('write', 'write-link')} onClick={confirmCancel}> */}\r\n\t\t\t\t\t\t<button className={classNames('button', 'blue', 'write-post', 'big')} onClick={confirmCancel}>\r\n\t\t\t\t\t\t\t<span className={classNames('text', 'white', 'write-post')}>{Words.CANCEL}</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t{/* </Link> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default AddPost;\r\n","C:\\Users\\maywn\\Front-end\\src\\common\\TempData.js",[],"C:\\Users\\maywn\\Front-end\\src\\InputSample.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\ViewPost.js",["160","161"],"import React, { useEffect, useState, useMemo } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport { useComponentVisibilityDispatch } from '../contexts/ComponentVisibilityContext';\r\nimport { useCheckStatusDispatch } from '../contexts/CheckStatusContext';\r\nimport { useCheckedItemsDispatch } from '../contexts/CheckedItemContext';\r\nimport Words from '../common/Words';\r\nimport { postsData } from '../common/TempData';\r\nimport usePagination from '../hooks/usePagination';\r\nimport { getPostList, getPageArray } from '../common/getInformation';\r\nimport ChangeFileModal from './ChangeFileModal';\r\nimport Contents from './Contents';\r\nimport Post from './Post';\r\nimport LeftArrow from '../icon/LeftArrow.png';\r\nimport RightArrow from '../icon/RightArrow.png';\r\nimport '../styles/ViewPost.scss';\r\nimport '../styles/Text.scss';\r\n\r\nfunction scrollToUp(event) {\r\n\t// 수정 스크롤 위로 올라가지 않음, 고쳐야됨\r\n\tdocument.getElementById('root').scrollTo(0, 0);\r\n}\r\n\r\nfunction ViewPost({ match }) {\r\n\tconst { postId } = match.params;\r\n\tconst postIdNum = parseInt(postId);\r\n\tconst pageCount = 4;\r\n\tconst componentVisibilityDispatch = useComponentVisibilityDispatch();\r\n\tconst checkStatusDispatch = useCheckStatusDispatch();\r\n\tconst checkedItemsDispatch = useCheckedItemsDispatch();\r\n\tconst [isChangeFileModalOn, setIsChangeFileModalOn] = useState(false);\r\n\t// 일단은 배열에서 find 찾지만 api적용하면 바로 데이터 하나만 받아올 수 있음\r\n\tconst contents = postsData.find((post) => post.ct_id === postIdNum);\r\n\tconst postList = getPostList(contents.ct_category.cg_id);\r\n\tconst initialPage = Math.floor(postList.findIndex((post) => post.ct_id === postIdNum) / pageCount) + 1;\r\n\tconst [pagination, updateCurrentPage, updateStartEndPage] = usePagination(initialPage);\r\n\tconst { currentPage, start, end } = pagination;\r\n\tconst postCount = useMemo(() => postList.length, [postList]);\r\n\tconst pageMaxIndex = Math.ceil(postCount / pageCount);\r\n\tconst pageArray = getPageArray(pageMaxIndex).slice(start, end);\r\n\tconst postIndexStart = (currentPage - 1) * pageCount;\r\n\tconst postIndexEnd = currentPage * pageCount;\r\n\r\n\tuseEffect(() => {\r\n\t\tcheckStatusDispatch({ type: 'RESET' });\r\n\t\tcheckedItemsDispatch({ type: 'RESET_ITEM' });\r\n\t\tcomponentVisibilityDispatch({ type: 'VISIBLE', name: 'categoryVisibility' });\r\n\t\treturn () => {\r\n\t\t\tcomponentVisibilityDispatch({ type: 'INVISIBLE', name: 'categoryVisibility' });\r\n\t\t};\r\n\t}, [componentVisibilityDispatch]);\r\n\r\n\tconst handleChangeFileModal = () => {\r\n\t\tsetIsChangeFileModalOn(!isChangeFileModalOn);\r\n\t};\r\n\r\n\tconst deletePost = (e) => {\r\n\t\tconst isConfirm = window.confirm(Words.ASK_DELETE_POST);\r\n\t\tif (isConfirm) {\r\n\t\t\t// api호출해서 해당 게시글 삭제\r\n\t\t} else {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"view-area\">\r\n\t\t\t<div className=\"view-header\">\r\n\t\t\t\t<div className={classNames('view-header', 'button-area', 'big')}>\r\n\t\t\t\t\t<button className={classNames('button', 'view', 'white', 'detail')}>\r\n\t\t\t\t\t\t<span className={classNames('text', 'blue', 'post-list', 'small')} onClick={handleChangeFileModal}>\r\n\t\t\t\t\t\t\t{Words.CHANGE_FILE}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<Link to={`/updatePost/${postId}`} className={classNames('button', 'view', 'white', 'detail')} id=\"update\">\r\n\t\t\t\t\t\t<span className={classNames('text', 'blue', 'post-list', 'small')}>{Words.UPDATE}</span>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to={`/postList/${contents.ct_category.cg_id}`} className={classNames('button', 'view', 'blue', 'detail')} onClick={deletePost}>\r\n\t\t\t\t\t\t<span className={classNames('text', 'white', 'post-list', 'small')} id=\"delete\">\r\n\t\t\t\t\t\t\t{Words.DELETE}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={classNames('post-view', 'detail')}>\r\n\t\t\t\t<div className={classNames('view-form', 'middle')}>\r\n\t\t\t\t\t<Contents contents={contents} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"detail-list \">\r\n\t\t\t\t\t<div className=\"detail-category\">\r\n\t\t\t\t\t\t<span className={classNames('text', 'bold', 'post-detail', 'category-name')}>{contents.ct_category.cg_title}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classNames('view-form', 'small')}>\r\n\t\t\t\t\t\t{postList.slice(postIndexStart, postIndexEnd).map((post) => (\r\n\t\t\t\t\t\t\t<Post id={post.ct_id} title={post.ct_title} date={post.ct_date} isDetail={true} currentPostId={postIdNum} key={post.ct_id} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"footer\">\r\n\t\t\t\t<div className=\"page-number\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"left-arrow\"\r\n\t\t\t\t\t\tsrc={LeftArrow}\r\n\t\t\t\t\t\talt=\"LeftArrow\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tif (currentPage !== 1) {\r\n\t\t\t\t\t\t\t\tupdateCurrentPage(currentPage - 1);\r\n\t\t\t\t\t\t\t\t// pageCount 변수명 변경, 한페이지에 놓은 post수 / 페이지 갯수 변수 두개 설정\r\n\t\t\t\t\t\t\t\tif (currentPage % 10 === 1) {\r\n\t\t\t\t\t\t\t\t\tupdateStartEndPage(false);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{pageArray.map((page) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName={classNames('button', 'view', 'white', 'page-link')}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tupdateCurrentPage(page);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{ color: currentPage === page && 'pink' }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{page}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"right-arrow\"\r\n\t\t\t\t\t\tsrc={RightArrow}\r\n\t\t\t\t\t\talt=\"RightArrow\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tif (currentPage !== pageMaxIndex) {\r\n\t\t\t\t\t\t\t\tupdateCurrentPage(currentPage + 1);\r\n\t\t\t\t\t\t\t\t// pageCount 변수명 변경, 한페이지에 놓은 post수 / 페이지 갯수 변수 두개 설정\r\n\t\t\t\t\t\t\t\tif (currentPage % 10 === 0) {\r\n\t\t\t\t\t\t\t\t\tupdateStartEndPage(true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{isChangeFileModalOn && <ChangeFileModal handleChangeFileModal={handleChangeFileModal}></ChangeFileModal>}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ViewPost;\r\n","C:\\Users\\maywn\\Front-end\\src\\components\\Contents.js",[],"C:\\Users\\maywn\\Front-end\\src\\components\\ChangeFileModal.js",["162"],"import React, { useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport Words from '../common/Words';\r\nimport LogoBlue from '../icon/LogoBlue.png';\r\nimport '../styles/FileModal.scss';\r\nimport '../styles/Button.scss';\r\nimport '../styles/Text.scss';\r\n\r\nfunction ChangeFileModal({ handleChangeFileModal }) {\r\n\tconst [uploadFile, setUploadFile] = useState({\r\n\t\tfileName: Words.SELECT_FILE,\r\n\t\tfileInformation: null,\r\n\t});\r\n\tconst { fileName, fileInformation } = uploadFile;\r\n\r\n\tconst fileHandler = (selectFile) => {\r\n\t\tconst _fileName = selectFile.name;\r\n\t\tsetUploadFile({\r\n\t\t\tfileName: _fileName,\r\n\t\t\tfileInformation: selectFile,\r\n\t\t});\r\n\t};\r\n\r\n\tconst changeFile = () => {\r\n\t\t// 파일 변경하는 api호출\r\n\t\thandleChangeFileModal();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"file-modal\">\r\n\t\t\t<div className=\"file-header\">\r\n\t\t\t\t<img className=\"file-logo\" src={LogoBlue} alt=\"LogoBlue\" />\r\n\t\t\t\t<span className={classNames('text', 'bold', 'modal-title')}>{Words.CHANGE_FILE}</span>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"change-select\">\r\n\t\t\t\t<div className={classNames('write', 'file-name')}>\r\n\t\t\t\t\t<span className={classNames('text', 'gray', 'file-name', 'change')}>{fileName}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\tid=\"select-file\"\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tconst selectFile = e.target.files[0];\r\n\t\t\t\t\t\tselectFile && fileHandler(selectFile);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\taccept=\".m4a\"\r\n\t\t\t\t/>\r\n\t\t\t\t<label className={classNames('button', 'blue', 'file-change', 'select')} htmlFor=\"select-file\">\r\n\t\t\t\t\t<span className={classNames('text', 'white', 'select-small')}>{Words.SELECT}</span>\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"change-button\">\r\n\t\t\t\t<button className={classNames('button', 'white', 'file-change', 'confirm')} onClick={changeFile}>\r\n\t\t\t\t\t<span className={classNames('text', 'blue', 'select-big')}>{Words.UPDATE}</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={classNames('button', 'blue', 'file-change', 'confirm')} onClick={handleChangeFileModal}>\r\n\t\t\t\t\t<span className={classNames('text', 'white', 'select-big')}>{Words.CANCEL}</span>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ChangeFileModal;\r\n","C:\\Users\\maywn\\Front-end\\src\\components\\UpdatePost.js",[],"C:\\Users\\maywn\\Front-end\\src\\common\\getInformation.js",[],"C:\\Users\\maywn\\Front-end\\src\\hooks\\useAsync.js",["163"],"import { useReducer, useEffect } from 'react';\r\n\r\nfunction reducer(state, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'LOADING':\r\n\t\t\treturn {\r\n\t\t\t\tloading: true,\r\n\t\t\t\tdata: null,\r\n\t\t\t\terror: null,\r\n\t\t\t};\r\n\t\tcase 'SUCCESS':\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tdata: action.data,\r\n\t\t\t\terror: null,\r\n\t\t\t};\r\n\t\tcase 'ERROR':\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tdata: null,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unhandled action type: ${action.type}`);\r\n\t}\r\n}\r\n\r\nfunction useAsync(callback, deps = [], skip = false) {\r\n\tconst [state, dispatch] = useReducer(reducer, {\r\n\t\tloading: false,\r\n\t\tdata: null,\r\n\t\terror: false,\r\n\t});\r\n\r\n\tconst fetchData = async () => {\r\n\t\tdispatch({ type: 'LOADING' });\r\n\t\ttry {\r\n\t\t\tconst data = await callback();\r\n\t\t\tconsole.log(data);\r\n\t\t\tdispatch({ type: 'SUCCESS', data });\r\n\t\t} catch (e) {\r\n\t\t\tdispatch({ type: 'ERROR', error: e });\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (skip) return;\r\n\t\tfetchData();\r\n\t}, [deps]);\r\n\r\n\treturn [state, fetchData];\r\n}\r\n\r\nexport default useAsync;\r\n","C:\\Users\\maywn\\Front-end\\src\\hooks\\usePagination.js",["164"],"import { useReducer, useCallback } from 'react';\r\n\r\nfunction paginationReducer(state, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'UPDATE_CURRENT_PAGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentPage: action.value,\r\n\t\t\t};\r\n\t\tcase 'UPDATE_START_END_PAGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstart: state.start + action.value,\r\n\t\t\t\tend: state.end + action.value,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unhandled action type: ${action.type}`);\r\n\t}\r\n}\r\n// viewPost에서 페이지 번호 보내주기\r\nfunction usePagination(initialPage = 1) {\r\n\tconst initialStart = Math.floor(initialPage / 10);\r\n\tconst initialState = {\r\n\t\tcurrentPage: initialPage,\r\n\t\tstart: initialStart * 10,\r\n\t\tend: (initialStart + 1) * 10,\r\n\t};\r\n\tconst [pagination, dispatch] = useReducer(paginationReducer, initialState);\r\n\r\n\tconst updateCurrentPage = (value) => {\r\n\t\tdispatch({ type: 'UPDATE_CURRENT_PAGE', value });\r\n\t};\r\n\t// 수정 - pageCount 매개변수에 넣어야 되나..?\r\n\tconst updateStartEndPage = (isUpIndex) => {\r\n\t\tisUpIndex ? dispatch({ type: 'UPDATE_START_END_PAGE', value: 10 }) : dispatch({ type: 'UPDATE_START_END_PAGE', value: -10 });\r\n\t};\r\n\r\n\treturn [pagination, updateCurrentPage, updateStartEndPage];\r\n}\r\n\r\nexport default usePagination;\r\n","C:\\Users\\maywn\\Front-end\\src\\contexts\\CategoryContext.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":13},{"ruleId":"169","severity":1,"message":"173","line":8,"column":8,"nodeType":"171","messageId":"172","endLine":8,"endColumn":16},{"ruleId":"169","severity":1,"message":"174","line":20,"column":8,"nodeType":"171","messageId":"172","endLine":20,"endColumn":20},{"ruleId":"169","severity":1,"message":"175","line":25,"column":21,"nodeType":"171","messageId":"172","endLine":25,"endColumn":34},{"ruleId":"169","severity":1,"message":"176","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"173","line":13,"column":8,"nodeType":"171","messageId":"172","endLine":13,"endColumn":16},{"ruleId":"169","severity":1,"message":"177","line":24,"column":16,"nodeType":"171","messageId":"172","endLine":24,"endColumn":27},{"ruleId":"169","severity":1,"message":"178","line":40,"column":10,"nodeType":"171","messageId":"172","endLine":40,"endColumn":19},{"ruleId":"179","severity":1,"message":"180","line":90,"column":24,"nodeType":"181","messageId":"182","endLine":90,"endColumn":26},{"ruleId":"169","severity":1,"message":"183","line":9,"column":10,"nodeType":"171","messageId":"172","endLine":9,"endColumn":22},{"ruleId":"169","severity":1,"message":"184","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":14},{"ruleId":"169","severity":1,"message":"185","line":18,"column":20,"nodeType":"171","messageId":"172","endLine":18,"endColumn":35},{"ruleId":"169","severity":1,"message":"186","line":23,"column":8,"nodeType":"171","messageId":"172","endLine":23,"endColumn":12},{"ruleId":"169","severity":1,"message":"187","line":19,"column":10,"nodeType":"171","messageId":"172","endLine":19,"endColumn":20},{"ruleId":"188","severity":1,"message":"189","line":51,"column":5,"nodeType":"190","endLine":51,"endColumn":34,"suggestions":"191"},{"ruleId":"169","severity":1,"message":"185","line":14,"column":20,"nodeType":"171","messageId":"172","endLine":14,"endColumn":35},{"ruleId":"188","severity":1,"message":"192","line":49,"column":5,"nodeType":"190","endLine":49,"endColumn":11,"suggestions":"193"},{"ruleId":"169","severity":1,"message":"194","line":1,"column":22,"nodeType":"171","messageId":"172","endLine":1,"endColumn":33},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useAsync' is defined but never used.","'userdispatch' is assigned a value but never used.","'setLoginError' is assigned a value but never used.","'useState' is defined but never used.","'getContents' is defined but never used.","'userToken' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'categoryList' is defined but never used.","'Link' is defined but never used.","'fileInformation' is assigned a value but never used.","'temp' is assigned a value but never used.","'scrollToUp' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkStatusDispatch' and 'checkedItemsDispatch'. Either include them or remove the dependency array.","ArrayExpression",["197"],"React Hook useEffect has missing dependencies: 'fetchData' and 'skip'. Either include them or remove the dependency array.",["198"],"'useCallback' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [checkStatusDispatch, checkedItemsDispatch, componentVisibilityDispatch]",{"range":"203","text":"204"},"Update the dependencies array to be: [deps, fetchData, skip]",{"range":"205","text":"206"},[2399,2428],"[checkStatusDispatch, checkedItemsDispatch, componentVisibilityDispatch]",[964,970],"[deps, fetchData, skip]"]